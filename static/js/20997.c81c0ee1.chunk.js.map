{"version":3,"file":"static/js/20997.c81c0ee1.chunk.js","mappings":"yLAQA,MAqEA,EArEaA,IAAuB,IAAtB,UAACC,GAAeD,EAC1B,MAAOE,EAAUC,IAAeC,EAAAA,EAAAA,aAE1B,KAACC,IAAQC,EAAAA,EAAAA,KAGTC,GADWC,EAAAA,EAAAA,MACUC,SAASC,MAAM,KAAKC,QAAQC,GAAMA,IAO7D,OALAC,EAAAA,EAAAA,YAAU,KACN,MAAMC,EAAcT,EAAKU,KAAIC,IAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAASD,GAAI,IAAEE,GAAIF,EAAKE,OACzDf,EAAYW,EAAY,GACzB,KAGCK,EAAAA,EAAAA,KAAA,OAAKlB,UAAS,+BAAAmB,OAAiCnB,GAAYoB,UAC3DC,EAAAA,EAAAA,MAAA,MAAIrB,UAAU,0DAAyDoB,SAAA,EACvEF,EAAAA,EAAAA,KAAA,MAAAE,UACIC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,GAAG,IAAIvB,UAAU,kDAAiDoB,SAAA,EACxEF,EAAAA,EAAAA,KAAA,QAAMlB,UAAU,UAASoB,SAAC,UAC1BF,EAAAA,EAAAA,KAAA,OACIM,MAAM,6BACNxB,UAAU,wBACVyB,KAAK,OACLC,QAAQ,YACRC,OAAO,eAAcP,UAErBF,EAAAA,EAAAA,KAAA,QACAU,cAAc,QACdC,eAAe,QACfC,YAAY,IACZC,EAAE,4JAMTzB,EAAUQ,KAAI,CAACkB,EAAOC,KACnB,MAAMV,EAAE,IAAAJ,OAAOb,EAAU4B,MAAM,EAAGD,EAAQ,GAAGE,KAAK,MAC5CC,EAAcnC,EAAWA,EAASoC,MAAMtB,GAASA,EAAKE,KAAOe,IAAS,KAG5E,OAFAM,QAAQC,IAAIH,IAGZf,EAAAA,EAAAA,MAACmB,EAAAA,SAAQ,CAAApB,SAAA,EACLF,EAAAA,EAAAA,KAAA,OACAM,MAAM,6BACNC,KAAK,OACLC,QAAQ,YACRI,YAAY,MACZH,OAAO,eACP3B,UAAU,sCAAqCoB,UAE/CF,EAAAA,EAAAA,KAAA,QAAMU,cAAc,QAAQC,eAAe,QAAQE,EAAE,wBAErDb,EAAAA,EAAAA,KAAA,MAAAE,UACAF,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CACDC,GAAIA,EACJvB,UAAU,qJAAoJoB,SAE7JgB,EAAcA,EAAYnB,GAAKe,QAhBzBT,EAmBJ,QAIb,C,mMCzDV,MAqFA,EArFkBkB,KACd,MAAM,aAAEC,EAAY,YAAEC,EAAW,eAAEC,EAAc,OAAEC,IAAWxC,EAAAA,EAAAA,KAExDyC,GAAWC,EAAAA,EAAAA,OACX,aAACC,IAAgBC,EAAAA,EAAAA,KACvBX,QAAQC,IAAII,GAEZ,MAAMO,EAAgBP,EAAcE,EAC9BM,EAAiBD,EAAgBL,EACjCO,EAAeV,EAAaR,MAAMiB,EAAgBD,GAYxD,OANAtC,EAAAA,EAAAA,YAAU,KACFoC,GACAJ,EAAeS,OAAOL,GAC1B,GACD,CAACA,EAAeL,KAGfzB,EAAAA,EAAAA,KAAA,WAASlB,UAAU,kDAAiDoB,UAChEC,EAAAA,EAAAA,MAAA,OAAKrB,UAAU,8HAA6HoB,SAAA,EACxIF,EAAAA,EAAAA,KAACoC,EAAAA,EAAI,CAACtD,UAAU,YAChBkB,EAAAA,EAAAA,KAACqC,EAAAA,EAAc,CAACC,UAAWC,EAAAA,EAAMrC,UACzBC,EAAAA,EAAAA,MAACqC,EAAAA,EAAK,CAACC,GAAI,CAAEC,SAAU,KAAO,aAAW,eAAcxC,SAAA,EACnDF,EAAAA,EAAAA,KAAC2C,EAAAA,EAAS,CAAAzC,UACNC,EAAAA,EAAAA,MAACyC,EAAAA,EAAQ,CAAC9D,UAAU,aAAYoB,SAAA,EAC5BF,EAAAA,EAAAA,KAAC6C,EAAAA,EAAS,CAAC/D,UAAU,iBAAgBoB,SAAC,gDACtCF,EAAAA,EAAAA,KAAC6C,EAAAA,EAAS,CAAA3C,SAAC,yCAGnBF,EAAAA,EAAAA,KAAC8C,EAAAA,EAAS,CAAA5C,SACLgC,EAAatC,KAAI,CAACC,EAAMkB,KACrBZ,EAAAA,EAAAA,MAACyC,EAAAA,EAAQ,CAELH,GAAI,CAAE,mCAAoC,CAAEM,OAAQ,IACpDjE,UAAU,0CAAyCoB,SAAA,EAEnDF,EAAAA,EAAAA,KAAC6C,EAAAA,EAAS,CAAA3C,SAAEL,EAAKmD,oBACjBhD,EAAAA,EAAAA,KAAC6C,EAAAA,EAAS,CAAA3C,UACNC,EAAAA,EAAAA,MAAA,OAAKrB,UAAU,oBAAmBoB,SAAA,EAC9BF,EAAAA,EAAAA,KAAA,OAAKiD,IAAKpD,EAAKqD,MAAOC,IAAI,GAAGrE,UAAU,sBAAqBkB,EAAAA,EAAAA,KAAA,OAAKlB,UAAU,qBAAoBoB,SAAEL,EAAKuD,aAG9GpD,EAAAA,EAAAA,KAAC6C,EAAAA,EAAS,KACV7C,EAAAA,EAAAA,KAAC6C,EAAAA,EAAS,KACV7C,EAAAA,EAAAA,KAAC6C,EAAAA,EAAS,KACV7C,EAAAA,EAAAA,KAAC6C,EAAAA,EAAS,KACV7C,EAAAA,EAAAA,KAAC6C,EAAAA,EAAS,KACV7C,EAAAA,EAAAA,KAAC6C,EAAAA,EAAS,KACV7C,EAAAA,EAAAA,KAAC6C,EAAAA,EAAS,KACV7C,EAAAA,EAAAA,KAAC6C,EAAAA,EAAS,CAAA3C,UACNF,EAAAA,EAAAA,KAAA,KAAGqD,KAAMxD,EAAKyD,IAAKC,OAAO,SAAQrD,UAC9BC,EAAAA,EAAAA,MAAA,UAAQrB,UAAU,yHAAwHoB,SAAA,EACtIF,EAAAA,EAAAA,KAAA,QAAMlB,UAAU,wGAChBkB,EAAAA,EAAAA,KAAA,QAAMlB,UAAU,kLAChBkB,EAAAA,EAAAA,KAAA,QAAMlB,UAAU,8IAA6IoB,SAAC,4FAG9JF,EAAAA,EAAAA,KAAA,QAAMlB,UAAU,oDAzBvBiC,aAmC7Bf,EAAAA,EAAAA,KAAA,OAAKlB,UAAU,uCAAsCoB,UACjDF,EAAAA,EAAAA,KAACwD,EAAAA,EAAU,CACPC,MAAM,YACNC,MAAO,EACPC,YAAalC,EACbmC,KAAMnC,EACNoC,SAAWD,GAlENA,KACrBhC,EAAS,cAAD3B,OAAe2D,GAAO,EAiEME,CAAgBF,WAI1C,C","sources":["compontents/Path.tsx","navigation/Exchanges.tsx"],"sourcesContent":["import { Link, useLocation } from \"react-router-dom\";\r\nimport { Fragment } from \"react/jsx-runtime\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { usePropsContext } from \"./StateContext\";\r\n\r\nimport { CoinData } from \"./StateContext\";\r\n\r\nconst Path = ({className}: any) => {\r\n    const [pathData, setPathData] = useState<CoinData[]>();\r\n\r\n    const {data} = usePropsContext();\r\n\r\n    const location = useLocation();\r\n    const pathnames = location.pathname.split('/').filter((x) => x);\r\n\r\n    useEffect(() => {\r\n        const dataForPath = data.map(item => ({...item, id: item.id}));\r\n        setPathData(dataForPath);\r\n    }, []);\r\n\r\n    return (\r\n        <nav className={`py-6 aria-label=\"Breadcrumb ${className}`}>\r\n        <ol className=\"flex flex-wrap items-center gap-2 text-sm text-gray-600\">\r\n        <li>\r\n            <Link to=\"/\" className=\"block transition hover:text-gray-700 text-white\">\r\n            <span className=\"sr-only\">Home</span>\r\n            <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                className=\"w-5 h-5 md:w-6 md:h-6\"\r\n                fill=\"none\"\r\n                viewBox=\"0 0 24 24\"\r\n                stroke=\"currentColor\"\r\n            >\r\n                <path\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                strokeWidth=\"2\"\r\n                d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\"\r\n                />\r\n            </svg>\r\n            </Link>\r\n        </li>\r\n\r\n        {pathnames.map((value, index) => {\r\n            const to = `/${pathnames.slice(0, index + 1).join('/')}`;\r\n            const currentItem = pathData ? pathData.find((item) => item.id === value) : null;\r\n            console.log(currentItem)\r\n\r\n            return (\r\n            <Fragment key={to}>\r\n                <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                fill=\"none\"\r\n                viewBox=\"0 0 24 24\"\r\n                strokeWidth=\"1.5\"\r\n                stroke=\"currentColor\"\r\n                className=\"w-4 h-4 md:w-5 md:h-5 text-gray-500\"\r\n                >\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M9 20.247l6-16.5\" />\r\n                </svg>\r\n                <li>\r\n                <Link\r\n                    to={to}\r\n                    className=\"block transition hover:text-gray-700 xs:text-xs md:text-md font-medium whitespace-nowrap truncate max-w-[100px] md:max-w-none text-white uppercase\"\r\n                >\r\n                    {currentItem ? currentItem.id : value}\r\n                </Link>\r\n                </li>\r\n            </Fragment>\r\n            );\r\n        })}\r\n        </ol>\r\n    </nav>\r\n    )\r\n}\r\n\r\nexport default Path;","import Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { usePropsContext } from '../compontents/StateContext';\r\n\r\nimport Path from '../compontents/Path';\r\n\r\nimport { Pagination } from \"@nextui-org/react\";\r\nimport { useEffect } from 'react';\r\n\r\nconst Exchanges = () => {\r\n    const { exchangeData, currentPage, setCurrentPage, onPage } = usePropsContext();\r\n\r\n    const navigate = useNavigate();\r\n    const {exchangePage} = useParams<{ exchangePage: string }>(); // Если не деструктуризировать useParams, то мы получали бы обьект, и использовали exchangePage.exchangePage , а если деструктуризировать, то число, или прямо содержимое\r\n    console.log(currentPage)\r\n    \r\n    const lastPostIndex = currentPage * onPage; // 50\r\n    const firstPostIndex = lastPostIndex - onPage; // 0\r\n    const currentPages = exchangeData.slice(firstPostIndex, lastPostIndex); // 0, 50\r\n\r\n    const handlePageClick = (page: number) => {\r\n        navigate(`/exchanges/${page}`);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (exchangePage) {\r\n            setCurrentPage(Number(exchangePage))\r\n        }\r\n    }, [exchangePage , currentPage])\r\n\r\n    return (\r\n        <section className=\"main bg-custom-background bg-fixed min-h-screen\">\r\n            <div className=\"main-container md:w-4/6 xs:w-11/12 py-4 mx-auto flex md:justify-center xs:justify-center flex-col min-h-screen items-center\">\r\n                <Path className='w-full' />\r\n                <TableContainer component={Paper}>\r\n                        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                            <TableHead>\r\n                                <TableRow className=\"border-b-1\">\r\n                                    <TableCell className=\"cursor-pointer\">Рейтинг</TableCell>\r\n                                    <TableCell>Біржа</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {currentPages.map((item, index) => (\r\n                                    <TableRow\r\n                                        key={index}\r\n                                        sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                                        className='hover:bg-gray-50 dark:hover:bg-gray-600'\r\n                                    >\r\n                                        <TableCell>{item.trust_score_rank}</TableCell>\r\n                                        <TableCell>\r\n                                            <div className='flex items-center'>\r\n                                                <img src={item.image} alt=\"\" className=\"w-8 rounded-full\" /><div className='ml-2 font-semibold'>{item.name}</div>\r\n                                            </div>\r\n                                        </TableCell>\r\n                                        <TableCell></TableCell>\r\n                                        <TableCell></TableCell>\r\n                                        <TableCell></TableCell>\r\n                                        <TableCell></TableCell>\r\n                                        <TableCell></TableCell>\r\n                                        <TableCell></TableCell>\r\n                                        <TableCell></TableCell>\r\n                                        <TableCell>\r\n                                            <a href={item.url} target='_blank'>\r\n                                                <button className=\"relative inline-flex text-xs items-center bg-indigo-50 justify-start px-3 py-1.5 overflow-hidden font-bold group w-max\">\r\n                                                    <span className=\"w-32 h-32 rotate-45 translate-x-12 -translate-y-2 absolute left-0 top-0 bg-indigo-600 opacity-[3%]\"></span>\r\n                                                    <span className=\"absolute top-0 left-0 w-48 h-48 -mt-1 transition-all duration-500 ease-in-out rotate-45 -translate-x-56 -translate-y-24 bg-indigo-600 opacity-100 group-hover:-translate-x-8\"></span>\r\n                                                    <span className=\"relative w-full md:text-sm xs:text-xs font-normal text-left text-gray-900 transition-colors duration-200 ease-in-out group-hover:text-white\">\r\n                                                        Перейти до біржи\r\n                                                    </span>\r\n                                                    <span className=\"absolute inset-0 border-2 border-white\"></span>\r\n                                                </button>\r\n                                            </a>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                \r\n                <div className=\"block mx-auto py-8 text-center w-max\">\r\n                    <Pagination\r\n                        color='secondary'\r\n                        total={2}\r\n                        initialPage={currentPage}\r\n                        page={currentPage}\r\n                        onChange={(page) => handlePageClick(page)}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Exchanges;"],"names":["_ref","className","pathData","setPathData","useState","data","usePropsContext","pathnames","useLocation","pathname","split","filter","x","useEffect","dataForPath","map","item","_objectSpread","id","_jsx","concat","children","_jsxs","Link","to","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","value","index","slice","join","currentItem","find","console","log","Fragment","Exchanges","exchangeData","currentPage","setCurrentPage","onPage","navigate","useNavigate","exchangePage","useParams","lastPostIndex","firstPostIndex","currentPages","Number","Path","TableContainer","component","Paper","Table","sx","minWidth","TableHead","TableRow","TableCell","TableBody","border","trust_score_rank","src","image","alt","name","href","url","target","Pagination","color","total","initialPage","page","onChange","handlePageClick"],"sourceRoot":""}