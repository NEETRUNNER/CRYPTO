{"version":3,"file":"static/js/30421.bf5fad1d.chunk.js","mappings":"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","sources":["compontents/Path.tsx","navigation/Coins.tsx"],"sourcesContent":["import { Link, useLocation } from \"react-router-dom\";\r\nimport { Fragment } from \"react/jsx-runtime\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { usePropsContext } from \"./StateContext\";\r\n\r\nimport { CoinData } from \"./StateContext\";\r\n\r\nconst Path = ({className}: any) => {\r\n    const [pathData, setPathData] = useState<CoinData[]>();\r\n\r\n    const {data} = usePropsContext();\r\n\r\n    const location = useLocation();\r\n    const pathnames = location.pathname.split('/').filter((x) => x);\r\n\r\n    useEffect(() => {\r\n        const dataForPath = data.map(item => ({...item, id: item.id}));\r\n        setPathData(dataForPath);\r\n    }, []);\r\n\r\n    return (\r\n        <nav className={`py-6 aria-label=\"Breadcrumb ${className}`}>\r\n        <ol className=\"flex flex-wrap items-center gap-2 text-sm text-gray-600\">\r\n        <li>\r\n            <Link to=\"/\" className=\"block transition hover:text-gray-700 text-black\">\r\n            <span className=\"sr-only\">Home</span>\r\n            <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                className=\"w-5 h-5 md:w-6 md:h-6\"\r\n                fill=\"none\"\r\n                viewBox=\"0 0 24 24\"\r\n                stroke=\"currentColor\"\r\n            >\r\n                <path\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                strokeWidth=\"2\"\r\n                d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\"\r\n                />\r\n            </svg>\r\n            </Link>\r\n        </li>\r\n\r\n        {pathnames.map((value, index) => {\r\n            const to = `/${pathnames.slice(0, index + 1).join('/')}`;\r\n            const currentItem = pathData ? pathData.find((item) => item.id === value) : null;\r\n            console.log(currentItem)\r\n\r\n            return (\r\n            <Fragment key={to}>\r\n                <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                fill=\"none\"\r\n                viewBox=\"0 0 24 24\"\r\n                strokeWidth=\"1.5\"\r\n                stroke=\"currentColor\"\r\n                className=\"w-4 h-4 md:w-5 md:h-5 text-gray-500\"\r\n                >\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M9 20.247l6-16.5\" />\r\n                </svg>\r\n                <li>\r\n                <Link\r\n                    to={to}\r\n                    className=\"block transition hover:text-gray-700 xs:text-xs md:text-md font-medium whitespace-nowrap truncate max-w-[100px] md:max-w-none text-black uppercase\"\r\n                >\r\n                    {currentItem ? currentItem.id : value}\r\n                </Link>\r\n                </li>\r\n            </Fragment>\r\n            );\r\n        })}\r\n        </ol>\r\n    </nav>\r\n    )\r\n}\r\n\r\nexport default Path;","import { useEffect, useState } from \"react\";\r\nimport { usePropsContext } from \"../compontents/StateContext\";\r\nimport Path from '../compontents/Path';\r\n\r\nimport {Table, TableHeader, TableColumn, TableBody, TableRow, TableCell} from \"@nextui-org/react\";\r\n\r\nimport { Link, useParams, useNavigate, useLocation } from \"react-router-dom\";\r\nimport { Pagination } from \"@nextui-org/react\";\r\n\r\nconst Main = () => {\r\n    const { data, currentPage, setCurrentPage, filteredData, setFilteredData, onPage, onFilter, setOnFilter } = usePropsContext();\r\n    \r\n    const navigate = useNavigate();\r\n    const { pageCount } = useParams<{ pageCount: string }>();\r\n\r\n    const lastPostIndex = currentPage * onPage; // 50\r\n    const firstPostIndex = lastPostIndex - onPage; // 0\r\n    const currentPages = data.slice(firstPostIndex, lastPostIndex); // 0, 50\r\n\r\n    console.log(data.length)\r\n\r\n    const handlePageClick = (page: number) => {\r\n        navigate(`/coins/${page}`);\r\n    };\r\n    console.log(currentPage)\r\n\r\n    useEffect(() => {\r\n        if (pageCount) {\r\n            setCurrentPage(Number(pageCount));\r\n        }\r\n        setFilteredData(currentPages)\r\n    }, [pageCount, currentPage]);\r\n\r\n    const filterByPrice = () => {\r\n        const filteredByPrice = currentPages.sort((a, b) => onFilter ? a.price - b.price : b.price - a.price);\r\n        setFilteredData(filteredByPrice)\r\n        setOnFilter(!onFilter)\r\n    }\r\n\r\n    const filterByRank = () => {\r\n        const filteredByRank = currentPages.sort((a, b) => onFilter ? a.rank - b.rank : b.rank - a.rank);\r\n        setFilteredData(filteredByRank)\r\n        setOnFilter(!onFilter)\r\n    }\r\n\r\n    const filterByHour = () => {\r\n        const filterByHour = currentPages.sort((a, b) => onFilter ? a.priceChange1h - b.priceChange1h : b.priceChange1h - a.priceChange1h);\r\n        setFilteredData(filterByHour)\r\n        setOnFilter(!onFilter)\r\n    }\r\n\r\n    const filterByDay = () => {\r\n        const filterByDay = currentPages.sort((a, b) => onFilter ? a.priceChange1d - b.priceChange1d : b.priceChange1d - a.priceChange1d);\r\n        setFilteredData(filterByDay)\r\n        setOnFilter(!onFilter)\r\n    }\r\n\r\n    const filterByWeek = () => {\r\n        const filterByWeek = currentPages.sort((a, b) => onFilter ? a.priceChange1w - b.priceChange1w : b.priceChange1w - a.priceChange1w);\r\n        setFilteredData(filterByWeek)\r\n        setOnFilter(!onFilter)\r\n    }\r\n\r\n    const pages = filteredData.length === 0 ? currentPages : filteredData;\r\n\r\n    return (\r\n        <section className=\"main\"> {/* bg-custom-background bg-fixed min-h-screen */}\r\n            <div className=\"main-container md:w-4/6 xs:w-11/12 py-4 mx-auto flex md:justify-center xs:justify-center flex-col min-h-screen items-center\">\r\n                <Path className='w-full' />\r\n                    <Table aria-label=\"Example static collection table\">\r\n                        <TableHeader>\r\n                                <TableColumn className=\"cursor-pointer\" onClick={filterByRank}>#</TableColumn>\r\n                                <TableColumn>Монета</TableColumn>\r\n                                <TableColumn className=\"cursor-pointer\" onClick={filterByPrice}>Ціна</TableColumn>\r\n                                <TableColumn className=\"cursor-pointer\" onClick={filterByHour}>1h (%)</TableColumn>\r\n                                <TableColumn className=\"cursor-pointer\" onClick={filterByDay}>1d (%)</TableColumn>\r\n                                <TableColumn className=\"cursor-pointer\" onClick={filterByWeek}>1w (%)</TableColumn>\r\n                                <TableColumn> </TableColumn>\r\n                        </TableHeader>\r\n                    <TableBody>\r\n                        {pages.map((item, index) => (\r\n                            <TableRow\r\n                                key={index}\r\n                                className=\"hover:bg-gray-50 dark:hover:bg-gray-600\"\r\n                            >\r\n                                <TableCell>{item.rank}</TableCell>\r\n                                <TableCell>\r\n                                    <div className=\"flex items-center\">\r\n                                        <img src={item.icon} alt=\"Иконка монеты\" className=\"w-8 inline-block ml-2\" />\r\n                                        <div className=\"ml-2 font-bold\">{item.name} ({item.symbol})</div>\r\n                                    </div>\r\n                                </TableCell>\r\n                                <TableCell>{item.price.toFixed(2)} $</TableCell>\r\n                                <TableCell>{item.priceChange1h}</TableCell>\r\n                                <TableCell>{item.priceChange1d}</TableCell>\r\n                                <TableCell>{item.priceChange1w}</TableCell>\r\n                                <TableCell>\r\n                                    <Link to={`/coins/${currentPage}/${item.id}`}>\r\n                                        <button className=\"relative inline-flex text-xs items-center bg-indigo-50 justify-start px-3 py-1.5 overflow-hidden font-bold group w-max\">\r\n                                            <span className=\"w-32 h-32 rotate-45 translate-x-12 -translate-y-2 absolute left-0 top-0 bg-indigo-600 opacity-[3%]\"></span>\r\n                                            <span className=\"absolute top-0 left-0 w-48 h-48 -mt-1 transition-all duration-500 ease-in-out rotate-45 -translate-x-56 -translate-y-24 bg-indigo-600 opacity-100 group-hover:-translate-x-8\"></span>\r\n                                            <span className=\"relative w-full md:text-sm xs:text-xs font-normal text-left text-gray-900 transition-colors duration-200 ease-in-out group-hover:text-white\">\r\n                                                Перейти до монети\r\n                                            </span>\r\n                                            <span className=\"absolute inset-0 border-2 border-white\"></span>\r\n                                        </button>\r\n                                    </Link>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n                \r\n                <div className=\"block mx-auto py-8 text-center w-max\">\r\n                    <Pagination\r\n                        color='secondary'\r\n                        total={6}\r\n                        initialPage={currentPage}\r\n                        page={currentPage}\r\n                        onChange={(page) => handlePageClick(page)}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Main;"],"names":["_ref","className","pathData","setPathData","useState","data","usePropsContext","pathnames","useLocation","pathname","split","filter","x","useEffect","dataForPath","map","item","_objectSpread","id","_jsx","concat","children","_jsxs","Link","to","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","value","index","slice","join","currentItem","find","console","log","Fragment","Main","currentPage","setCurrentPage","filteredData","setFilteredData","onPage","onFilter","setOnFilter","navigate","useNavigate","pageCount","useParams","lastPostIndex","firstPostIndex","currentPages","length","Number","pages","Path","Table","TableHeader","TableColumn","onClick","filterByRank","filteredByRank","sort","a","b","rank","filterByPrice","filteredByPrice","price","filterByHour","priceChange1h","filterByDay","priceChange1d","filterByWeek","priceChange1w","TableBody","TableRow","TableCell","src","icon","alt","name","symbol","toFixed","Pagination","color","total","initialPage","page","onChange","handlePageClick"],"sourceRoot":""}