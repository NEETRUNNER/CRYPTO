{"version":3,"file":"static/js/74150.677d1bf7.chunk.js","mappings":"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","sources":["../node_modules/@react-aria/interactions/dist/packages/@react-aria/interactions/src/useFocusVisible.ts","../node_modules/@react-aria/interactions/dist/packages/@react-aria/interactions/src/utils.ts","../node_modules/@react-aria/interactions/dist/packages/@react-aria/interactions/src/useFocus.ts","../node_modules/@react-aria/interactions/dist/packages/@react-aria/interactions/src/useFocusWithin.ts","../node_modules/@react-aria/focus/dist/packages/@react-aria/focus/src/useFocusRing.ts","../node_modules/@react-aria/interactions/dist/packages/@react-aria/interactions/src/useHover.ts","../node_modules/@react-aria/utils/dist/packages/@react-aria/utils/src/domHelpers.ts","../node_modules/@react-aria/utils/dist/packages/@react-aria/utils/src/isVirtualEvent.ts","../node_modules/@react-aria/utils/dist/packages/@react-aria/utils/src/platform.ts","../node_modules/@react-aria/utils/dist/packages/@react-aria/utils/src/useEffectEvent.ts","../node_modules/@react-aria/utils/dist/packages/@react-aria/utils/src/useLayoutEffect.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {getOwnerDocument, getOwnerWindow, isMac, isVirtualClick} from '@react-aria/utils';\nimport {useEffect, useState} from 'react';\nimport {useIsSSR} from '@react-aria/ssr';\n\nexport type Modality = 'keyboard' | 'pointer' | 'virtual';\ntype HandlerEvent = PointerEvent | MouseEvent | KeyboardEvent | FocusEvent | null;\ntype Handler = (modality: Modality, e: HandlerEvent) => void;\nexport type FocusVisibleHandler = (isFocusVisible: boolean) => void;\nexport interface FocusVisibleProps {\n  /** Whether the element is a text input. */\n  isTextInput?: boolean,\n  /** Whether the element will be auto focused. */\n  autoFocus?: boolean\n}\n\nexport interface FocusVisibleResult {\n  /** Whether keyboard focus is visible globally. */\n  isFocusVisible: boolean\n}\n\nlet currentModality: null | Modality = null;\nlet changeHandlers = new Set<Handler>();\ninterface GlobalListenerData {\n  focus: () => void\n}\nexport let hasSetupGlobalListeners = new Map<Window, GlobalListenerData>(); // We use a map here to support setting event listeners across multiple document objects.\nlet hasEventBeforeFocus = false;\nlet hasBlurredWindowRecently = false;\n\n// Only Tab or Esc keys will make focus visible on text input elements\nconst FOCUS_VISIBLE_INPUT_KEYS = {\n  Tab: true,\n  Escape: true\n};\n\nfunction triggerChangeHandlers(modality: Modality, e: HandlerEvent) {\n  for (let handler of changeHandlers) {\n    handler(modality, e);\n  }\n}\n\n/**\n * Helper function to determine if a KeyboardEvent is unmodified and could make keyboard focus styles visible.\n */\nfunction isValidKey(e: KeyboardEvent) {\n  // Control and Shift keys trigger when navigating back to the tab with keyboard.\n  return !(e.metaKey || (!isMac() && e.altKey) || e.ctrlKey || e.key === 'Control' || e.key === 'Shift' || e.key === 'Meta');\n}\n\n\nfunction handleKeyboardEvent(e: KeyboardEvent) {\n  hasEventBeforeFocus = true;\n  if (isValidKey(e)) {\n    currentModality = 'keyboard';\n    triggerChangeHandlers('keyboard', e);\n  }\n}\n\nfunction handlePointerEvent(e: PointerEvent | MouseEvent) {\n  currentModality = 'pointer';\n  if (e.type === 'mousedown' || e.type === 'pointerdown') {\n    hasEventBeforeFocus = true;\n    triggerChangeHandlers('pointer', e);\n  }\n}\n\nfunction handleClickEvent(e: MouseEvent) {\n  if (isVirtualClick(e)) {\n    hasEventBeforeFocus = true;\n    currentModality = 'virtual';\n  }\n}\n\nfunction handleFocusEvent(e: FocusEvent) {\n  // Firefox fires two extra focus events when the user first clicks into an iframe:\n  // first on the window, then on the document. We ignore these events so they don't\n  // cause keyboard focus rings to appear.\n  if (e.target === window || e.target === document) {\n    return;\n  }\n\n  // If a focus event occurs without a preceding keyboard or pointer event, switch to virtual modality.\n  // This occurs, for example, when navigating a form with the next/previous buttons on iOS.\n  if (!hasEventBeforeFocus && !hasBlurredWindowRecently) {\n    currentModality = 'virtual';\n    triggerChangeHandlers('virtual', e);\n  }\n\n  hasEventBeforeFocus = false;\n  hasBlurredWindowRecently = false;\n}\n\nfunction handleWindowBlur() {\n  // When the window is blurred, reset state. This is necessary when tabbing out of the window,\n  // for example, since a subsequent focus event won't be fired.\n  hasEventBeforeFocus = false;\n  hasBlurredWindowRecently = true;\n}\n\n/**\n * Setup global event listeners to control when keyboard focus style should be visible.\n */\nfunction setupGlobalFocusEvents(element?: HTMLElement | null) {\n  if (typeof window === 'undefined' || hasSetupGlobalListeners.get(getOwnerWindow(element))) {\n    return;\n  }\n\n  const windowObject = getOwnerWindow(element);\n  const documentObject = getOwnerDocument(element);\n\n  // Programmatic focus() calls shouldn't affect the current input modality.\n  // However, we need to detect other cases when a focus event occurs without\n  // a preceding user event (e.g. screen reader focus). Overriding the focus\n  // method on HTMLElement.prototype is a bit hacky, but works.\n  let focus = windowObject.HTMLElement.prototype.focus;\n  windowObject.HTMLElement.prototype.focus = function () {\n    hasEventBeforeFocus = true;\n    focus.apply(this, arguments as unknown as [options?: FocusOptions | undefined]);\n  };\n\n  documentObject.addEventListener('keydown', handleKeyboardEvent, true);\n  documentObject.addEventListener('keyup', handleKeyboardEvent, true);\n  documentObject.addEventListener('click', handleClickEvent, true);\n\n  // Register focus events on the window so they are sure to happen\n  // before React's event listeners (registered on the document).\n  windowObject.addEventListener('focus', handleFocusEvent, true);\n  windowObject.addEventListener('blur', handleWindowBlur, false);\n\n  if (typeof PointerEvent !== 'undefined') {\n    documentObject.addEventListener('pointerdown', handlePointerEvent, true);\n    documentObject.addEventListener('pointermove', handlePointerEvent, true);\n    documentObject.addEventListener('pointerup', handlePointerEvent, true);\n  } else {\n    documentObject.addEventListener('mousedown', handlePointerEvent, true);\n    documentObject.addEventListener('mousemove', handlePointerEvent, true);\n    documentObject.addEventListener('mouseup', handlePointerEvent, true);\n  }\n\n  // Add unmount handler\n  windowObject.addEventListener('beforeunload', () => {\n    tearDownWindowFocusTracking(element);\n  }, {once: true});\n\n  hasSetupGlobalListeners.set(windowObject, {focus});\n}\n\nconst tearDownWindowFocusTracking = (element, loadListener?: () => void) => {\n  const windowObject = getOwnerWindow(element);\n  const documentObject = getOwnerDocument(element);\n  if (loadListener) {\n    documentObject.removeEventListener('DOMContentLoaded', loadListener);\n  }\n  if (!hasSetupGlobalListeners.has(windowObject)) {\n    return;\n  }\n  windowObject.HTMLElement.prototype.focus = hasSetupGlobalListeners.get(windowObject)!.focus;\n\n  documentObject.removeEventListener('keydown', handleKeyboardEvent, true);\n  documentObject.removeEventListener('keyup', handleKeyboardEvent, true);\n  documentObject.removeEventListener('click', handleClickEvent, true);\n  windowObject.removeEventListener('focus', handleFocusEvent, true);\n  windowObject.removeEventListener('blur', handleWindowBlur, false);\n\n  if (typeof PointerEvent !== 'undefined') {\n    documentObject.removeEventListener('pointerdown', handlePointerEvent, true);\n    documentObject.removeEventListener('pointermove', handlePointerEvent, true);\n    documentObject.removeEventListener('pointerup', handlePointerEvent, true);\n  } else {\n    documentObject.removeEventListener('mousedown', handlePointerEvent, true);\n    documentObject.removeEventListener('mousemove', handlePointerEvent, true);\n    documentObject.removeEventListener('mouseup', handlePointerEvent, true);\n  }\n\n  hasSetupGlobalListeners.delete(windowObject);\n};\n\n/**\n * EXPERIMENTAL\n * Adds a window (i.e. iframe) to the list of windows that are being tracked for focus visible.\n *\n * Sometimes apps render portions of their tree into an iframe. In this case, we cannot accurately track if the focus\n * is visible because we cannot see interactions inside the iframe. If you have this in your application's architecture,\n * then this function will attach event listeners inside the iframe. You should call `addWindowFocusTracking` with an\n * element from inside the window you wish to add. We'll retrieve the relevant elements based on that.\n * Note, you do not need to call this for the default window, as we call it for you.\n *\n * When you are ready to stop listening, but you do not wish to unmount the iframe, you may call the cleanup function\n * returned by `addWindowFocusTracking`. Otherwise, when you unmount the iframe, all listeners and state will be cleaned\n * up automatically for you.\n *\n * @param element @default document.body - The element provided will be used to get the window to add.\n * @returns A function to remove the event listeners and cleanup the state.\n */\nexport function addWindowFocusTracking(element?: HTMLElement | null): () => void {\n  const documentObject = getOwnerDocument(element);\n  let loadListener;\n  if (documentObject.readyState !== 'loading') {\n    setupGlobalFocusEvents(element);\n  } else {\n    loadListener = () => {\n      setupGlobalFocusEvents(element);\n    };\n    documentObject.addEventListener('DOMContentLoaded', loadListener);\n  }\n\n  return () => tearDownWindowFocusTracking(element, loadListener);\n}\n\n// Server-side rendering does not have the document object defined\n// eslint-disable-next-line no-restricted-globals\nif (typeof document !== 'undefined') {\n  addWindowFocusTracking();\n}\n\n/**\n * If true, keyboard focus is visible.\n */\nexport function isFocusVisible(): boolean {\n  return currentModality !== 'pointer';\n}\n\nexport function getInteractionModality(): Modality | null {\n  return currentModality;\n}\n\nexport function setInteractionModality(modality: Modality) {\n  currentModality = modality;\n  triggerChangeHandlers(modality, null);\n}\n\n/**\n * Keeps state of the current modality.\n */\nexport function useInteractionModality(): Modality | null {\n  setupGlobalFocusEvents();\n\n  let [modality, setModality] = useState(currentModality);\n  useEffect(() => {\n    let handler = () => {\n      setModality(currentModality);\n    };\n\n    changeHandlers.add(handler);\n    return () => {\n      changeHandlers.delete(handler);\n    };\n  }, []);\n\n  return useIsSSR() ? null : modality;\n}\n\nconst nonTextInputTypes = new Set([\n  'checkbox',\n  'radio',\n  'range',\n  'color',\n  'file',\n  'image',\n  'button',\n  'submit',\n  'reset'\n]);\n\n/**\n * If this is attached to text input component, return if the event is a focus event (Tab/Escape keys pressed) so that\n * focus visible style can be properly set.\n */\nfunction isKeyboardFocusEvent(isTextInput: boolean, modality: Modality, e: HandlerEvent) {\n  const IHTMLInputElement = typeof window !== 'undefined' ? getOwnerWindow(e?.target as Element).HTMLInputElement : HTMLInputElement;\n  const IHTMLTextAreaElement = typeof window !== 'undefined' ? getOwnerWindow(e?.target as Element).HTMLTextAreaElement : HTMLTextAreaElement;\n  const IHTMLElement = typeof window !== 'undefined' ? getOwnerWindow(e?.target as Element).HTMLElement : HTMLElement;\n  const IKeyboardEvent = typeof window !== 'undefined' ? getOwnerWindow(e?.target as Element).KeyboardEvent : KeyboardEvent;\n\n  isTextInput = isTextInput ||\n    (e?.target instanceof IHTMLInputElement && !nonTextInputTypes.has(e?.target?.type)) ||\n    e?.target instanceof IHTMLTextAreaElement ||\n    (e?.target instanceof IHTMLElement && e?.target.isContentEditable);\n  return !(isTextInput && modality === 'keyboard' && e instanceof IKeyboardEvent && !FOCUS_VISIBLE_INPUT_KEYS[e.key]);\n}\n\n/**\n * Manages focus visible state for the page, and subscribes individual components for updates.\n */\nexport function useFocusVisible(props: FocusVisibleProps = {}): FocusVisibleResult {\n  let {isTextInput, autoFocus} = props;\n  let [isFocusVisibleState, setFocusVisible] = useState(autoFocus || isFocusVisible());\n  useFocusVisibleListener((isFocusVisible) => {\n    setFocusVisible(isFocusVisible);\n  }, [isTextInput], {isTextInput});\n\n  return {isFocusVisible: isFocusVisibleState};\n}\n\n/**\n * Listens for trigger change and reports if focus is visible (i.e., modality is not pointer).\n */\nexport function useFocusVisibleListener(fn: FocusVisibleHandler, deps: ReadonlyArray<any>, opts?: {isTextInput?: boolean}): void {\n  setupGlobalFocusEvents();\n\n  useEffect(() => {\n    let handler = (modality: Modality, e: HandlerEvent) => {\n      if (!isKeyboardFocusEvent(!!(opts?.isTextInput), modality, e)) {\n        return;\n      }\n      fn(isFocusVisible());\n    };\n    changeHandlers.add(handler);\n    return () => {\n      changeHandlers.delete(handler);\n    };\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusEvent as ReactFocusEvent, useCallback, useRef} from 'react';\nimport {useEffectEvent, useLayoutEffect} from '@react-aria/utils';\n\nexport class SyntheticFocusEvent<Target = Element> implements ReactFocusEvent<Target> {\n  nativeEvent: FocusEvent;\n  target: EventTarget & Target;\n  currentTarget: EventTarget & Target;\n  relatedTarget: Element;\n  bubbles: boolean;\n  cancelable: boolean;\n  defaultPrevented: boolean;\n  eventPhase: number;\n  isTrusted: boolean;\n  timeStamp: number;\n  type: string;\n\n  constructor(type: string, nativeEvent: FocusEvent) {\n    this.nativeEvent = nativeEvent;\n    this.target = nativeEvent.target as EventTarget & Target;\n    this.currentTarget = nativeEvent.currentTarget as EventTarget & Target;\n    this.relatedTarget = nativeEvent.relatedTarget as Element;\n    this.bubbles = nativeEvent.bubbles;\n    this.cancelable = nativeEvent.cancelable;\n    this.defaultPrevented = nativeEvent.defaultPrevented;\n    this.eventPhase = nativeEvent.eventPhase;\n    this.isTrusted = nativeEvent.isTrusted;\n    this.timeStamp = nativeEvent.timeStamp;\n    this.type = type;\n  }\n\n  isDefaultPrevented(): boolean {\n    return this.nativeEvent.defaultPrevented;\n  }\n\n  preventDefault(): void {\n    this.defaultPrevented = true;\n    this.nativeEvent.preventDefault();\n  }\n\n  stopPropagation(): void {\n    this.nativeEvent.stopPropagation();\n    this.isPropagationStopped = () => true;\n  }\n\n  isPropagationStopped(): boolean {\n    return false;\n  }\n\n  persist() {}\n}\n\nexport function useSyntheticBlurEvent<Target = Element>(onBlur: (e: ReactFocusEvent<Target>) => void) {\n  let stateRef = useRef({\n    isFocused: false,\n    observer: null as MutationObserver | null\n  });\n\n  // Clean up MutationObserver on unmount. See below.\n   \n  useLayoutEffect(() => {\n    const state = stateRef.current;\n    return () => {\n      if (state.observer) {\n        state.observer.disconnect();\n        state.observer = null;\n      }\n    };\n  }, []);\n\n  let dispatchBlur = useEffectEvent((e: SyntheticFocusEvent<Target>) => {\n    onBlur?.(e);\n  });\n\n  // This function is called during a React onFocus event.\n  return useCallback((e: ReactFocusEvent<Target>) => {\n    // React does not fire onBlur when an element is disabled. https://github.com/facebook/react/issues/9142\n    // Most browsers fire a native focusout event in this case, except for Firefox. In that case, we use a\n    // MutationObserver to watch for the disabled attribute, and dispatch these events ourselves.\n    // For browsers that do, focusout fires before the MutationObserver, so onBlur should not fire twice.\n    if (\n      e.target instanceof HTMLButtonElement ||\n      e.target instanceof HTMLInputElement ||\n      e.target instanceof HTMLTextAreaElement ||\n      e.target instanceof HTMLSelectElement\n    ) {\n      stateRef.current.isFocused = true;\n\n      let target = e.target;\n      let onBlurHandler: EventListenerOrEventListenerObject | null = (e) => {\n        stateRef.current.isFocused = false;\n\n        if (target.disabled) {\n          // For backward compatibility, dispatch a (fake) React synthetic event.\n          dispatchBlur(new SyntheticFocusEvent('blur', e as FocusEvent));\n        }\n\n        // We no longer need the MutationObserver once the target is blurred.\n        if (stateRef.current.observer) {\n          stateRef.current.observer.disconnect();\n          stateRef.current.observer = null;\n        }\n      };\n\n      target.addEventListener('focusout', onBlurHandler, {once: true});\n\n      stateRef.current.observer = new MutationObserver(() => {\n        if (stateRef.current.isFocused && target.disabled) {\n          stateRef.current.observer?.disconnect();\n          let relatedTargetEl = target === document.activeElement ? null : document.activeElement;\n          target.dispatchEvent(new FocusEvent('blur', {relatedTarget: relatedTargetEl}));\n          target.dispatchEvent(new FocusEvent('focusout', {bubbles: true, relatedTarget: relatedTargetEl}));\n        }\n      });\n\n      stateRef.current.observer.observe(target, {attributes: true, attributeFilter: ['disabled']});\n    }\n  }, [dispatchBlur]);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {DOMAttributes, FocusableElement, FocusEvents} from '@react-types/shared';\nimport {FocusEvent, useCallback} from 'react';\nimport {getOwnerDocument} from '@react-aria/utils';\nimport {useSyntheticBlurEvent} from './utils';\n\nexport interface FocusProps<Target = FocusableElement> extends FocusEvents<Target> {\n  /** Whether the focus events should be disabled. */\n  isDisabled?: boolean\n}\n\nexport interface FocusResult<Target = FocusableElement> {\n  /** Props to spread onto the target element. */\n  focusProps: DOMAttributes<Target>\n}\n\n/**\n * Handles focus events for the immediate target.\n * Focus events on child elements will be ignored.\n */\nexport function useFocus<Target extends FocusableElement = FocusableElement>(props: FocusProps<Target>): FocusResult<Target> {\n  let {\n    isDisabled,\n    onFocus: onFocusProp,\n    onBlur: onBlurProp,\n    onFocusChange\n  } = props;\n\n  const onBlur: FocusProps<Target>['onBlur'] = useCallback((e: FocusEvent<Target>) => {\n    if (e.target === e.currentTarget) {\n      if (onBlurProp) {\n        onBlurProp(e);\n      }\n\n      if (onFocusChange) {\n        onFocusChange(false);\n      }\n\n      return true;\n    }\n  }, [onBlurProp, onFocusChange]);\n\n\n  const onSyntheticFocus = useSyntheticBlurEvent<Target>(onBlur);\n\n  const onFocus: FocusProps<Target>['onFocus'] = useCallback((e: FocusEvent<Target>) => {\n    // Double check that document.activeElement actually matches e.target in case a previously chained\n    // focus handler already moved focus somewhere else.\n\n    const ownerDocument = getOwnerDocument(e.target);\n\n    if (e.target === e.currentTarget && ownerDocument.activeElement === e.target) {\n      if (onFocusProp) {\n        onFocusProp(e);\n      }\n\n      if (onFocusChange) {\n        onFocusChange(true);\n      }\n\n      onSyntheticFocus(e);\n    }\n  }, [onFocusChange, onFocusProp, onSyntheticFocus]);\n\n  return {\n    focusProps: {\n      onFocus: (!isDisabled && (onFocusProp || onFocusChange || onBlurProp)) ? onFocus : undefined,\n      onBlur: (!isDisabled && (onBlurProp || onFocusChange)) ? onBlur : undefined\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {DOMAttributes} from '@react-types/shared';\nimport {FocusEvent, useCallback, useRef} from 'react';\nimport {useSyntheticBlurEvent} from './utils';\n\nexport interface FocusWithinProps {\n  /** Whether the focus within events should be disabled. */\n  isDisabled?: boolean,\n  /** Handler that is called when the target element or a descendant receives focus. */\n  onFocusWithin?: (e: FocusEvent) => void,\n  /** Handler that is called when the target element and all descendants lose focus. */\n  onBlurWithin?: (e: FocusEvent) => void,\n  /** Handler that is called when the the focus within state changes. */\n  onFocusWithinChange?: (isFocusWithin: boolean) => void\n}\n\nexport interface FocusWithinResult {\n  /** Props to spread onto the target element. */\n  focusWithinProps: DOMAttributes\n}\n\n/**\n * Handles focus events for the target and its descendants.\n */\nexport function useFocusWithin(props: FocusWithinProps): FocusWithinResult {\n  let {\n    isDisabled,\n    onBlurWithin,\n    onFocusWithin,\n    onFocusWithinChange\n  } = props;\n  let state = useRef({\n    isFocusWithin: false\n  });\n\n  let onBlur = useCallback((e: FocusEvent) => {\n    // We don't want to trigger onBlurWithin and then immediately onFocusWithin again\n    // when moving focus inside the element. Only trigger if the currentTarget doesn't\n    // include the relatedTarget (where focus is moving).\n    if (state.current.isFocusWithin && !(e.currentTarget as Element).contains(e.relatedTarget as Element)) {\n      state.current.isFocusWithin = false;\n\n      if (onBlurWithin) {\n        onBlurWithin(e);\n      }\n\n      if (onFocusWithinChange) {\n        onFocusWithinChange(false);\n      }\n    }\n  }, [onBlurWithin, onFocusWithinChange, state]);\n\n  let onSyntheticFocus = useSyntheticBlurEvent(onBlur);\n  let onFocus = useCallback((e: FocusEvent) => {\n    // Double check that document.activeElement actually matches e.target in case a previously chained\n    // focus handler already moved focus somewhere else.\n    if (!state.current.isFocusWithin && document.activeElement === e.target) {\n      if (onFocusWithin) {\n        onFocusWithin(e);\n      }\n\n      if (onFocusWithinChange) {\n        onFocusWithinChange(true);\n      }\n\n      state.current.isFocusWithin = true;\n      onSyntheticFocus(e);\n    }\n  }, [onFocusWithin, onFocusWithinChange, onSyntheticFocus]);\n\n  if (isDisabled) {\n    return {\n      focusWithinProps: {\n        // These should not have been null, that would conflict in mergeProps\n        onFocus: undefined,\n        onBlur: undefined\n      }\n    };\n  }\n\n  return {\n    focusWithinProps: {\n      onFocus,\n      onBlur\n    }\n  };\n}\n","import {DOMAttributes} from '@react-types/shared';\nimport {isFocusVisible, useFocus, useFocusVisibleListener, useFocusWithin} from '@react-aria/interactions';\nimport {useCallback, useRef, useState} from 'react';\n\nexport interface AriaFocusRingProps {\n  /**\n   * Whether to show the focus ring when something\n   * inside the container element has focus (true), or\n   * only if the container itself has focus (false).\n   * @default 'false'\n   */\n  within?: boolean,\n\n  /** Whether the element is a text input. */\n  isTextInput?: boolean,\n\n  /** Whether the element will be auto focused. */\n  autoFocus?: boolean\n}\n\nexport interface FocusRingAria {\n  /** Whether the element is currently focused. */\n  isFocused: boolean,\n\n  /** Whether keyboard focus should be visible. */\n  isFocusVisible: boolean,\n\n  /** Props to apply to the container element with the focus ring. */\n  focusProps: DOMAttributes\n}\n\n/**\n * Determines whether a focus ring should be shown to indicate keyboard focus.\n * Focus rings are visible only when the user is interacting with a keyboard,\n * not with a mouse, touch, or other input methods.\n */\nexport function useFocusRing(props: AriaFocusRingProps = {}): FocusRingAria {\n  let {\n    autoFocus = false,\n    isTextInput,\n    within\n  } = props;\n  let state = useRef({\n    isFocused: false,\n    isFocusVisible: autoFocus || isFocusVisible()\n  });\n  let [isFocused, setFocused] = useState(false);\n  let [isFocusVisibleState, setFocusVisible] = useState(() => state.current.isFocused && state.current.isFocusVisible);\n\n  let updateState = useCallback(() => setFocusVisible(state.current.isFocused && state.current.isFocusVisible), []);\n\n  let onFocusChange = useCallback(isFocused => {\n    state.current.isFocused = isFocused;\n    setFocused(isFocused);\n    updateState();\n  }, [updateState]);\n\n  useFocusVisibleListener((isFocusVisible) => {\n    state.current.isFocusVisible = isFocusVisible;\n    updateState();\n  }, [], {isTextInput});\n\n  let {focusProps} = useFocus({\n    isDisabled: within,\n    onFocusChange\n  });\n\n  let {focusWithinProps} = useFocusWithin({\n    isDisabled: !within,\n    onFocusWithinChange: onFocusChange\n  });\n\n  return {\n    isFocused,\n    isFocusVisible: isFocusVisibleState,\n    focusProps: within ? focusWithinProps : focusProps\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {DOMAttributes, HoverEvents} from '@react-types/shared';\nimport {useEffect, useMemo, useRef, useState} from 'react';\n\nexport interface HoverProps extends HoverEvents {\n  /** Whether the hover events should be disabled. */\n  isDisabled?: boolean\n}\n\nexport interface HoverResult {\n  /** Props to spread on the target element. */\n  hoverProps: DOMAttributes,\n  isHovered: boolean\n}\n\n// iOS fires onPointerEnter twice: once with pointerType=\"touch\" and again with pointerType=\"mouse\".\n// We want to ignore these emulated events so they do not trigger hover behavior.\n// See https://bugs.webkit.org/show_bug.cgi?id=214609.\nlet globalIgnoreEmulatedMouseEvents = false;\nlet hoverCount = 0;\n\nfunction setGlobalIgnoreEmulatedMouseEvents() {\n  globalIgnoreEmulatedMouseEvents = true;\n\n  // Clear globalIgnoreEmulatedMouseEvents after a short timeout. iOS fires onPointerEnter\n  // with pointerType=\"mouse\" immediately after onPointerUp and before onFocus. On other\n  // devices that don't have this quirk, we don't want to ignore a mouse hover sometime in\n  // the distant future because a user previously touched the element.\n  setTimeout(() => {\n    globalIgnoreEmulatedMouseEvents = false;\n  }, 50);\n}\n\nfunction handleGlobalPointerEvent(e) {\n  if (e.pointerType === 'touch') {\n    setGlobalIgnoreEmulatedMouseEvents();\n  }\n}\n\nfunction setupGlobalTouchEvents() {\n  if (typeof document === 'undefined') {\n    return;\n  }\n\n  if (typeof PointerEvent !== 'undefined') {\n    document.addEventListener('pointerup', handleGlobalPointerEvent);\n  } else {\n    document.addEventListener('touchend', setGlobalIgnoreEmulatedMouseEvents);\n  }\n\n  hoverCount++;\n  return () => {\n    hoverCount--;\n    if (hoverCount > 0) {\n      return;\n    }\n\n    if (typeof PointerEvent !== 'undefined') {\n      document.removeEventListener('pointerup', handleGlobalPointerEvent);\n    } else {\n      document.removeEventListener('touchend', setGlobalIgnoreEmulatedMouseEvents);\n    }\n  };\n}\n\n/**\n * Handles pointer hover interactions for an element. Normalizes behavior\n * across browsers and platforms, and ignores emulated mouse events on touch devices.\n */\nexport function useHover(props: HoverProps): HoverResult {\n  let {\n    onHoverStart,\n    onHoverChange,\n    onHoverEnd,\n    isDisabled\n  } = props;\n\n  let [isHovered, setHovered] = useState(false);\n  let state = useRef({\n    isHovered: false,\n    ignoreEmulatedMouseEvents: false,\n    pointerType: '',\n    target: null\n  }).current;\n\n  useEffect(setupGlobalTouchEvents, []);\n\n  let {hoverProps, triggerHoverEnd} = useMemo(() => {\n    let triggerHoverStart = (event, pointerType) => {\n      state.pointerType = pointerType;\n      if (isDisabled || pointerType === 'touch' || state.isHovered || !event.currentTarget.contains(event.target)) {\n        return;\n      }\n\n      state.isHovered = true;\n      let target = event.currentTarget;\n      state.target = target;\n\n      if (onHoverStart) {\n        onHoverStart({\n          type: 'hoverstart',\n          target,\n          pointerType\n        });\n      }\n\n      if (onHoverChange) {\n        onHoverChange(true);\n      }\n\n      setHovered(true);\n    };\n\n    let triggerHoverEnd = (event, pointerType) => {\n      state.pointerType = '';\n      state.target = null;\n\n      if (pointerType === 'touch' || !state.isHovered) {\n        return;\n      }\n\n      state.isHovered = false;\n      let target = event.currentTarget;\n      if (onHoverEnd) {\n        onHoverEnd({\n          type: 'hoverend',\n          target,\n          pointerType\n        });\n      }\n\n      if (onHoverChange) {\n        onHoverChange(false);\n      }\n\n      setHovered(false);\n    };\n\n    let hoverProps: DOMAttributes = {};\n\n    if (typeof PointerEvent !== 'undefined') {\n      hoverProps.onPointerEnter = (e) => {\n        if (globalIgnoreEmulatedMouseEvents && e.pointerType === 'mouse') {\n          return;\n        }\n\n        triggerHoverStart(e, e.pointerType);\n      };\n\n      hoverProps.onPointerLeave = (e) => {\n        if (!isDisabled && e.currentTarget.contains(e.target as Element)) {\n          triggerHoverEnd(e, e.pointerType);\n        }\n      };\n    } else {\n      hoverProps.onTouchStart = () => {\n        state.ignoreEmulatedMouseEvents = true;\n      };\n\n      hoverProps.onMouseEnter = (e) => {\n        if (!state.ignoreEmulatedMouseEvents && !globalIgnoreEmulatedMouseEvents) {\n          triggerHoverStart(e, 'mouse');\n        }\n\n        state.ignoreEmulatedMouseEvents = false;\n      };\n\n      hoverProps.onMouseLeave = (e) => {\n        if (!isDisabled && e.currentTarget.contains(e.target as Element)) {\n          triggerHoverEnd(e, 'mouse');\n        }\n      };\n    }\n    return {hoverProps, triggerHoverEnd};\n  }, [onHoverStart, onHoverChange, onHoverEnd, isDisabled, state]);\n\n  useEffect(() => {\n    // Call the triggerHoverEnd as soon as isDisabled changes to true\n    // Safe to call triggerHoverEnd, it will early return if we aren't currently hovering\n    if (isDisabled) {\n      triggerHoverEnd({currentTarget: state.target}, state.pointerType);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isDisabled]);\n\n  return {\n    hoverProps,\n    isHovered\n  };\n}\n","export const getOwnerDocument = (el: Element | null | undefined): Document => {\n  return el?.ownerDocument ?? document;\n};\n\nexport const getOwnerWindow = (\n  el: (Window & typeof global) | Element | null | undefined\n): Window & typeof global => {\n  if (el && 'window' in el && el.window === el) {\n    return el;\n  }\n\n  const doc = getOwnerDocument(el as Element | null | undefined);\n  return doc.defaultView || window;\n};\n","/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {isAndroid} from './platform';\n\n// Original licensing for the following method can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/blob/3c713d513195a53788b3f8bb4b70279d68b15bcc/packages/react-interactions/events/src/dom/shared/index.js#L74-L87\n\n// Keyboards, Assistive Technologies, and element.click() all produce a \"virtual\"\n// click event. This is a method of inferring such clicks. Every browser except\n// IE 11 only sets a zero value of \"detail\" for click events that are \"virtual\".\n// However, IE 11 uses a zero value for all click events. For IE 11 we rely on\n// the quirk that it produces click events that are of type PointerEvent, and\n// where only the \"virtual\" click lacks a pointerType field.\n\nexport function isVirtualClick(event: MouseEvent | PointerEvent): boolean {\n  // JAWS/NVDA with Firefox.\n  if ((event as any).mozInputSource === 0 && event.isTrusted) {\n    return true;\n  }\n\n  // Android TalkBack's detail value varies depending on the event listener providing the event so we have specific logic here instead\n  // If pointerType is defined, event is from a click listener. For events from mousedown listener, detail === 0 is a sufficient check\n  // to detect TalkBack virtual clicks.\n  if (isAndroid() && (event as PointerEvent).pointerType) {\n    return event.type === 'click' && event.buttons === 1;\n  }\n\n  return event.detail === 0 && !(event as PointerEvent).pointerType;\n}\n\nexport function isVirtualPointerEvent(event: PointerEvent) {\n  // If the pointer size is zero, then we assume it's from a screen reader.\n  // Android TalkBack double tap will sometimes return a event with width and height of 1\n  // and pointerType === 'mouse' so we need to check for a specific combination of event attributes.\n  // Cannot use \"event.pressure === 0\" as the sole check due to Safari pointer events always returning pressure === 0\n  // instead of .5, see https://bugs.webkit.org/show_bug.cgi?id=206216. event.pointerType === 'mouse' is to distingush\n  // Talkback double tap from Windows Firefox touch screen press\n  return (\n    (!isAndroid() && event.width === 0 && event.height === 0) ||\n    (event.width === 1 &&\n      event.height === 1 &&\n      event.pressure === 0 &&\n      event.detail === 0 &&\n      event.pointerType === 'mouse'\n    )\n  );\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction testUserAgent(re: RegExp) {\n  if (typeof window === 'undefined' || window.navigator == null) {\n    return false;\n  }\n  return (\n    window.navigator['userAgentData']?.brands.some((brand: {brand: string, version: string}) => re.test(brand.brand))\n  ) ||\n  re.test(window.navigator.userAgent);\n}\n\nfunction testPlatform(re: RegExp) {\n  return typeof window !== 'undefined' && window.navigator != null\n    ? re.test(window.navigator['userAgentData']?.platform || window.navigator.platform)\n    : false;\n}\n\nfunction cached(fn: () => boolean) {\n  if (process.env.NODE_ENV === 'test') {\n    return fn;\n  }\n  \n  let res: boolean | null = null;\n  return () => {\n    if (res == null) {\n      res = fn();\n    }\n    return res;\n  };\n}\n\nexport const isMac = cached(function () {\n  return testPlatform(/^Mac/i);\n});\n\nexport const isIPhone = cached(function () {\n  return testPlatform(/^iPhone/i);\n});\n\nexport const isIPad = cached(function () {\n  return testPlatform(/^iPad/i) ||\n    // iPadOS 13 lies and says it's a Mac, but we can distinguish by detecting touch support.\n    (isMac() && navigator.maxTouchPoints > 1);\n});\n\nexport const isIOS = cached(function () {\n  return isIPhone() || isIPad();\n});\n\nexport const isAppleDevice = cached(function () {\n  return isMac() || isIOS();\n});\n\nexport const isWebKit = cached(function () {\n  return testUserAgent(/AppleWebKit/i) && !isChrome();\n});\n\nexport const isChrome = cached(function () {\n  return testUserAgent(/Chrome/i);\n});\n\nexport const isAndroid = cached(function () {\n  return testUserAgent(/Android/i);\n});\n\nexport const isFirefox = cached(function () {\n  return testUserAgent(/Firefox/i);\n});\n","/*\n * Copyright 2023 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {useCallback, useRef} from 'react';\nimport {useLayoutEffect} from './useLayoutEffect';\n\nexport function useEffectEvent<T extends Function>(fn?: T): T {\n  const ref = useRef<T | null | undefined>(null);\n  useLayoutEffect(() => {\n    ref.current = fn;\n  }, [fn]);\n  // @ts-ignore\n  return useCallback<T>((...args) => {\n    const f = ref.current!;\n    return f?.(...args);\n  }, []);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport React from 'react';\n\n// During SSR, React emits a warning when calling useLayoutEffect.\n// Since neither useLayoutEffect nor useEffect run on the server,\n// we can suppress this by replace it with a noop on the server.\nexport const useLayoutEffect = typeof document !== 'undefined'\n  ? React.useLayoutEffect\n  : () => {};\n"],"names":["$507fabe10e71c6fb$var$currentModality","$507fabe10e71c6fb$var$changeHandlers","Set","$507fabe10e71c6fb$export$d90243b58daecda7","Map","$507fabe10e71c6fb$var$hasEventBeforeFocus","$507fabe10e71c6fb$var$hasBlurredWindowRecently","$507fabe10e71c6fb$var$FOCUS_VISIBLE_INPUT_KEYS","Tab","Escape","$507fabe10e71c6fb$var$triggerChangeHandlers","modality","e","handler","$507fabe10e71c6fb$var$handleKeyboardEvent","metaKey","$28AnR$isMac","altKey","ctrlKey","key","$507fabe10e71c6fb$var$isValidKey","$507fabe10e71c6fb$var$handlePointerEvent","type","$507fabe10e71c6fb$var$handleClickEvent","$28AnR$isVirtualClick","$507fabe10e71c6fb$var$handleFocusEvent","target","window","document","$507fabe10e71c6fb$var$handleWindowBlur","$507fabe10e71c6fb$var$setupGlobalFocusEvents","element","get","$28AnR$getOwnerWindow","windowObject","documentObject","$28AnR$getOwnerDocument","focus","HTMLElement","prototype","apply","this","arguments","addEventListener","PointerEvent","$507fabe10e71c6fb$var$tearDownWindowFocusTracking","once","set","loadListener","removeEventListener","has","delete","$507fabe10e71c6fb$export$b9b3dfddab17db27","readyState","$507fabe10e71c6fb$export$2f1888112f558a7d","$507fabe10e71c6fb$var$nonTextInputTypes","$507fabe10e71c6fb$export$ec71b4b83ac08ec3","fn","deps","opts","$28AnR$useEffect","isTextInput","_e_target","IHTMLInputElement","HTMLInputElement","IHTMLTextAreaElement","HTMLTextAreaElement","IHTMLElement","IKeyboardEvent","KeyboardEvent","isContentEditable","$507fabe10e71c6fb$var$isKeyboardFocusEvent","add","$8a9cb279dc87e130$export$905e7fc544a71f36","isDefaultPrevented","nativeEvent","defaultPrevented","preventDefault","stopPropagation","isPropagationStopped","persist","constructor","currentTarget","relatedTarget","bubbles","cancelable","eventPhase","isTrusted","timeStamp","$8a9cb279dc87e130$export$715c682d09d639cc","onBlur","stateRef","$6dfIe$useRef","isFocused","observer","$6dfIe$useLayoutEffect","state","current","disconnect","dispatchBlur","$6dfIe$useEffectEvent","$6dfIe$useCallback","HTMLButtonElement","HTMLSelectElement","onBlurHandler","disabled","MutationObserver","_stateRef_current_observer","relatedTargetEl","activeElement","dispatchEvent","FocusEvent","observe","attributes","attributeFilter","$a1ea59d68270f0dd$export$f8168d8dd8fd66e6","props","isDisabled","onFocus","onFocusProp","onBlurProp","onFocusChange","$hf0lj$useCallback","onSyntheticFocus","ownerDocument","$hf0lj$getOwnerDocument","focusProps","undefined","$9ab94262bd0047c7$export$420e68273165f4ec","onBlurWithin","onFocusWithin","onFocusWithinChange","$3b9Q0$useRef","isFocusWithin","$3b9Q0$useCallback","contains","focusWithinProps","$f7dceffc5ad7768b$export$4e328f61c538687f","length","autoFocus","within","$isWE5$useRef","isFocusVisible","$isWE5$isFocusVisible","setFocused","$isWE5$useState","isFocusVisibleState","setFocusVisible","updateState","$isWE5$useCallback","$isWE5$useFocusVisibleListener","$isWE5$useFocus","$isWE5$useFocusWithin","$6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents","$6179b936705e76d3$var$hoverCount","$6179b936705e76d3$var$setGlobalIgnoreEmulatedMouseEvents","setTimeout","$6179b936705e76d3$var$handleGlobalPointerEvent","pointerType","$6179b936705e76d3$var$setupGlobalTouchEvents","$6179b936705e76d3$export$ae780daf29e6d456","onHoverStart","onHoverChange","onHoverEnd","isHovered","setHovered","$AWxnT$useState","$AWxnT$useRef","ignoreEmulatedMouseEvents","$AWxnT$useEffect","hoverProps","triggerHoverEnd","$AWxnT$useMemo","triggerHoverStart","event","onPointerEnter","onPointerLeave","onTouchStart","onMouseEnter","onMouseLeave","$431fbd86ca7dc216$export$b204af158042fbac","el","_el_ownerDocument","$431fbd86ca7dc216$export$f21a1ffae260145a","defaultView","$6a7db85432448f7f$export$60278871457622de","mozInputSource","$c87311424ea30a05$export$a11b0059900ceec8","buttons","detail","$6a7db85432448f7f$export$29bf1b5f2c56cf63","width","height","pressure","$c87311424ea30a05$var$testUserAgent","re","_window_navigator_userAgentData","navigator","brands","some","brand","test","userAgent","$c87311424ea30a05$var$testPlatform","platform","$c87311424ea30a05$var$cached","res","$c87311424ea30a05$export$9ac100e40613ea10","$c87311424ea30a05$export$186c6964ca17d99","$c87311424ea30a05$export$7bef049ce92e4224","maxTouchPoints","$c87311424ea30a05$export$fedb369cb70207f1","$c87311424ea30a05$export$78551043582a6a98","$c87311424ea30a05$export$6446a186d09e379e","$c87311424ea30a05$export$b7d78993b74f766d","$8ae05eaa5c114e9c$export$7f54fc3180508a52","ref","$lmaYr$useRef","$f0a04ccd8dbdd83b$export$e5c5a5f917a5871c","$lmaYr$useCallback","f","$HgANd$react","useLayoutEffect"],"sourceRoot":""}