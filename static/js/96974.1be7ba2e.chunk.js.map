{"version":3,"file":"static/js/96974.1be7ba2e.chunk.js","mappings":"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","sources":["../node_modules/@react-aria/focus/dist/packages/@react-aria/focus/src/useFocusRing.ts","../node_modules/@react-aria/interactions/dist/packages/@react-aria/interactions/src/useFocus.ts","../node_modules/@react-aria/interactions/dist/packages/@react-aria/interactions/src/useFocusVisible.ts","../node_modules/@react-aria/interactions/dist/packages/@react-aria/interactions/src/useFocusWithin.ts","../node_modules/@react-aria/interactions/dist/packages/@react-aria/interactions/src/useHover.ts","../node_modules/@react-aria/interactions/dist/packages/@react-aria/interactions/src/utils.ts","../packages/@react-aria/ssr/src/SSRProvider.tsx","../node_modules/@react-aria/utils/dist/packages/@react-aria/utils/src/domHelpers.ts","../node_modules/@react-aria/utils/dist/packages/@react-aria/utils/src/isVirtualEvent.ts","../node_modules/@react-aria/utils/dist/packages/@react-aria/utils/src/platform.ts","../node_modules/@react-aria/utils/dist/packages/@react-aria/utils/src/useEffectEvent.ts","../node_modules/@react-aria/utils/dist/packages/@react-aria/utils/src/useLayoutEffect.ts"],"sourcesContent":["import {DOMAttributes} from '@react-types/shared';\nimport {isFocusVisible, useFocus, useFocusVisibleListener, useFocusWithin} from '@react-aria/interactions';\nimport {useCallback, useRef, useState} from 'react';\n\nexport interface AriaFocusRingProps {\n  /**\n   * Whether to show the focus ring when something\n   * inside the container element has focus (true), or\n   * only if the container itself has focus (false).\n   * @default 'false'\n   */\n  within?: boolean,\n\n  /** Whether the element is a text input. */\n  isTextInput?: boolean,\n\n  /** Whether the element will be auto focused. */\n  autoFocus?: boolean\n}\n\nexport interface FocusRingAria {\n  /** Whether the element is currently focused. */\n  isFocused: boolean,\n\n  /** Whether keyboard focus should be visible. */\n  isFocusVisible: boolean,\n\n  /** Props to apply to the container element with the focus ring. */\n  focusProps: DOMAttributes\n}\n\n/**\n * Determines whether a focus ring should be shown to indicate keyboard focus.\n * Focus rings are visible only when the user is interacting with a keyboard,\n * not with a mouse, touch, or other input methods.\n */\nexport function useFocusRing(props: AriaFocusRingProps = {}): FocusRingAria {\n  let {\n    autoFocus = false,\n    isTextInput,\n    within\n  } = props;\n  let state = useRef({\n    isFocused: false,\n    isFocusVisible: autoFocus || isFocusVisible()\n  });\n  let [isFocused, setFocused] = useState(false);\n  let [isFocusVisibleState, setFocusVisible] = useState(() => state.current.isFocused && state.current.isFocusVisible);\n\n  let updateState = useCallback(() => setFocusVisible(state.current.isFocused && state.current.isFocusVisible), []);\n\n  let onFocusChange = useCallback(isFocused => {\n    state.current.isFocused = isFocused;\n    setFocused(isFocused);\n    updateState();\n  }, [updateState]);\n\n  useFocusVisibleListener((isFocusVisible) => {\n    state.current.isFocusVisible = isFocusVisible;\n    updateState();\n  }, [], {isTextInput});\n\n  let {focusProps} = useFocus({\n    isDisabled: within,\n    onFocusChange\n  });\n\n  let {focusWithinProps} = useFocusWithin({\n    isDisabled: !within,\n    onFocusWithinChange: onFocusChange\n  });\n\n  return {\n    isFocused,\n    isFocusVisible: isFocusVisibleState,\n    focusProps: within ? focusWithinProps : focusProps\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {DOMAttributes, FocusableElement, FocusEvents} from '@react-types/shared';\nimport {FocusEvent, useCallback} from 'react';\nimport {getOwnerDocument} from '@react-aria/utils';\nimport {useSyntheticBlurEvent} from './utils';\n\nexport interface FocusProps<Target = FocusableElement> extends FocusEvents<Target> {\n  /** Whether the focus events should be disabled. */\n  isDisabled?: boolean\n}\n\nexport interface FocusResult<Target = FocusableElement> {\n  /** Props to spread onto the target element. */\n  focusProps: DOMAttributes<Target>\n}\n\n/**\n * Handles focus events for the immediate target.\n * Focus events on child elements will be ignored.\n */\nexport function useFocus<Target extends FocusableElement = FocusableElement>(props: FocusProps<Target>): FocusResult<Target> {\n  let {\n    isDisabled,\n    onFocus: onFocusProp,\n    onBlur: onBlurProp,\n    onFocusChange\n  } = props;\n\n  const onBlur: FocusProps<Target>['onBlur'] = useCallback((e: FocusEvent<Target>) => {\n    if (e.target === e.currentTarget) {\n      if (onBlurProp) {\n        onBlurProp(e);\n      }\n\n      if (onFocusChange) {\n        onFocusChange(false);\n      }\n\n      return true;\n    }\n  }, [onBlurProp, onFocusChange]);\n\n\n  const onSyntheticFocus = useSyntheticBlurEvent<Target>(onBlur);\n\n  const onFocus: FocusProps<Target>['onFocus'] = useCallback((e: FocusEvent<Target>) => {\n    // Double check that document.activeElement actually matches e.target in case a previously chained\n    // focus handler already moved focus somewhere else.\n\n    const ownerDocument = getOwnerDocument(e.target);\n\n    if (e.target === e.currentTarget && ownerDocument.activeElement === e.target) {\n      if (onFocusProp) {\n        onFocusProp(e);\n      }\n\n      if (onFocusChange) {\n        onFocusChange(true);\n      }\n\n      onSyntheticFocus(e);\n    }\n  }, [onFocusChange, onFocusProp, onSyntheticFocus]);\n\n  return {\n    focusProps: {\n      onFocus: (!isDisabled && (onFocusProp || onFocusChange || onBlurProp)) ? onFocus : undefined,\n      onBlur: (!isDisabled && (onBlurProp || onFocusChange)) ? onBlur : undefined\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {getOwnerDocument, getOwnerWindow, isMac, isVirtualClick} from '@react-aria/utils';\nimport {useEffect, useState} from 'react';\nimport {useIsSSR} from '@react-aria/ssr';\n\nexport type Modality = 'keyboard' | 'pointer' | 'virtual';\ntype HandlerEvent = PointerEvent | MouseEvent | KeyboardEvent | FocusEvent | null;\ntype Handler = (modality: Modality, e: HandlerEvent) => void;\nexport type FocusVisibleHandler = (isFocusVisible: boolean) => void;\nexport interface FocusVisibleProps {\n  /** Whether the element is a text input. */\n  isTextInput?: boolean,\n  /** Whether the element will be auto focused. */\n  autoFocus?: boolean\n}\n\nexport interface FocusVisibleResult {\n  /** Whether keyboard focus is visible globally. */\n  isFocusVisible: boolean\n}\n\nlet currentModality: null | Modality = null;\nlet changeHandlers = new Set<Handler>();\ninterface GlobalListenerData {\n  focus: () => void\n}\nexport let hasSetupGlobalListeners = new Map<Window, GlobalListenerData>(); // We use a map here to support setting event listeners across multiple document objects.\nlet hasEventBeforeFocus = false;\nlet hasBlurredWindowRecently = false;\n\n// Only Tab or Esc keys will make focus visible on text input elements\nconst FOCUS_VISIBLE_INPUT_KEYS = {\n  Tab: true,\n  Escape: true\n};\n\nfunction triggerChangeHandlers(modality: Modality, e: HandlerEvent) {\n  for (let handler of changeHandlers) {\n    handler(modality, e);\n  }\n}\n\n/**\n * Helper function to determine if a KeyboardEvent is unmodified and could make keyboard focus styles visible.\n */\nfunction isValidKey(e: KeyboardEvent) {\n  // Control and Shift keys trigger when navigating back to the tab with keyboard.\n  return !(e.metaKey || (!isMac() && e.altKey) || e.ctrlKey || e.key === 'Control' || e.key === 'Shift' || e.key === 'Meta');\n}\n\n\nfunction handleKeyboardEvent(e: KeyboardEvent) {\n  hasEventBeforeFocus = true;\n  if (isValidKey(e)) {\n    currentModality = 'keyboard';\n    triggerChangeHandlers('keyboard', e);\n  }\n}\n\nfunction handlePointerEvent(e: PointerEvent | MouseEvent) {\n  currentModality = 'pointer';\n  if (e.type === 'mousedown' || e.type === 'pointerdown') {\n    hasEventBeforeFocus = true;\n    triggerChangeHandlers('pointer', e);\n  }\n}\n\nfunction handleClickEvent(e: MouseEvent) {\n  if (isVirtualClick(e)) {\n    hasEventBeforeFocus = true;\n    currentModality = 'virtual';\n  }\n}\n\nfunction handleFocusEvent(e: FocusEvent) {\n  // Firefox fires two extra focus events when the user first clicks into an iframe:\n  // first on the window, then on the document. We ignore these events so they don't\n  // cause keyboard focus rings to appear.\n  if (e.target === window || e.target === document) {\n    return;\n  }\n\n  // If a focus event occurs without a preceding keyboard or pointer event, switch to virtual modality.\n  // This occurs, for example, when navigating a form with the next/previous buttons on iOS.\n  if (!hasEventBeforeFocus && !hasBlurredWindowRecently) {\n    currentModality = 'virtual';\n    triggerChangeHandlers('virtual', e);\n  }\n\n  hasEventBeforeFocus = false;\n  hasBlurredWindowRecently = false;\n}\n\nfunction handleWindowBlur() {\n  // When the window is blurred, reset state. This is necessary when tabbing out of the window,\n  // for example, since a subsequent focus event won't be fired.\n  hasEventBeforeFocus = false;\n  hasBlurredWindowRecently = true;\n}\n\n/**\n * Setup global event listeners to control when keyboard focus style should be visible.\n */\nfunction setupGlobalFocusEvents(element?: HTMLElement | null) {\n  if (typeof window === 'undefined' || hasSetupGlobalListeners.get(getOwnerWindow(element))) {\n    return;\n  }\n\n  const windowObject = getOwnerWindow(element);\n  const documentObject = getOwnerDocument(element);\n\n  // Programmatic focus() calls shouldn't affect the current input modality.\n  // However, we need to detect other cases when a focus event occurs without\n  // a preceding user event (e.g. screen reader focus). Overriding the focus\n  // method on HTMLElement.prototype is a bit hacky, but works.\n  let focus = windowObject.HTMLElement.prototype.focus;\n  windowObject.HTMLElement.prototype.focus = function () {\n    hasEventBeforeFocus = true;\n    focus.apply(this, arguments as unknown as [options?: FocusOptions | undefined]);\n  };\n\n  documentObject.addEventListener('keydown', handleKeyboardEvent, true);\n  documentObject.addEventListener('keyup', handleKeyboardEvent, true);\n  documentObject.addEventListener('click', handleClickEvent, true);\n\n  // Register focus events on the window so they are sure to happen\n  // before React's event listeners (registered on the document).\n  windowObject.addEventListener('focus', handleFocusEvent, true);\n  windowObject.addEventListener('blur', handleWindowBlur, false);\n\n  if (typeof PointerEvent !== 'undefined') {\n    documentObject.addEventListener('pointerdown', handlePointerEvent, true);\n    documentObject.addEventListener('pointermove', handlePointerEvent, true);\n    documentObject.addEventListener('pointerup', handlePointerEvent, true);\n  } else {\n    documentObject.addEventListener('mousedown', handlePointerEvent, true);\n    documentObject.addEventListener('mousemove', handlePointerEvent, true);\n    documentObject.addEventListener('mouseup', handlePointerEvent, true);\n  }\n\n  // Add unmount handler\n  windowObject.addEventListener('beforeunload', () => {\n    tearDownWindowFocusTracking(element);\n  }, {once: true});\n\n  hasSetupGlobalListeners.set(windowObject, {focus});\n}\n\nconst tearDownWindowFocusTracking = (element, loadListener?: () => void) => {\n  const windowObject = getOwnerWindow(element);\n  const documentObject = getOwnerDocument(element);\n  if (loadListener) {\n    documentObject.removeEventListener('DOMContentLoaded', loadListener);\n  }\n  if (!hasSetupGlobalListeners.has(windowObject)) {\n    return;\n  }\n  windowObject.HTMLElement.prototype.focus = hasSetupGlobalListeners.get(windowObject)!.focus;\n\n  documentObject.removeEventListener('keydown', handleKeyboardEvent, true);\n  documentObject.removeEventListener('keyup', handleKeyboardEvent, true);\n  documentObject.removeEventListener('click', handleClickEvent, true);\n  windowObject.removeEventListener('focus', handleFocusEvent, true);\n  windowObject.removeEventListener('blur', handleWindowBlur, false);\n\n  if (typeof PointerEvent !== 'undefined') {\n    documentObject.removeEventListener('pointerdown', handlePointerEvent, true);\n    documentObject.removeEventListener('pointermove', handlePointerEvent, true);\n    documentObject.removeEventListener('pointerup', handlePointerEvent, true);\n  } else {\n    documentObject.removeEventListener('mousedown', handlePointerEvent, true);\n    documentObject.removeEventListener('mousemove', handlePointerEvent, true);\n    documentObject.removeEventListener('mouseup', handlePointerEvent, true);\n  }\n\n  hasSetupGlobalListeners.delete(windowObject);\n};\n\n/**\n * EXPERIMENTAL\n * Adds a window (i.e. iframe) to the list of windows that are being tracked for focus visible.\n *\n * Sometimes apps render portions of their tree into an iframe. In this case, we cannot accurately track if the focus\n * is visible because we cannot see interactions inside the iframe. If you have this in your application's architecture,\n * then this function will attach event listeners inside the iframe. You should call `addWindowFocusTracking` with an\n * element from inside the window you wish to add. We'll retrieve the relevant elements based on that.\n * Note, you do not need to call this for the default window, as we call it for you.\n *\n * When you are ready to stop listening, but you do not wish to unmount the iframe, you may call the cleanup function\n * returned by `addWindowFocusTracking`. Otherwise, when you unmount the iframe, all listeners and state will be cleaned\n * up automatically for you.\n *\n * @param element @default document.body - The element provided will be used to get the window to add.\n * @returns A function to remove the event listeners and cleanup the state.\n */\nexport function addWindowFocusTracking(element?: HTMLElement | null): () => void {\n  const documentObject = getOwnerDocument(element);\n  let loadListener;\n  if (documentObject.readyState !== 'loading') {\n    setupGlobalFocusEvents(element);\n  } else {\n    loadListener = () => {\n      setupGlobalFocusEvents(element);\n    };\n    documentObject.addEventListener('DOMContentLoaded', loadListener);\n  }\n\n  return () => tearDownWindowFocusTracking(element, loadListener);\n}\n\n// Server-side rendering does not have the document object defined\n// eslint-disable-next-line no-restricted-globals\nif (typeof document !== 'undefined') {\n  addWindowFocusTracking();\n}\n\n/**\n * If true, keyboard focus is visible.\n */\nexport function isFocusVisible(): boolean {\n  return currentModality !== 'pointer';\n}\n\nexport function getInteractionModality(): Modality | null {\n  return currentModality;\n}\n\nexport function setInteractionModality(modality: Modality) {\n  currentModality = modality;\n  triggerChangeHandlers(modality, null);\n}\n\n/**\n * Keeps state of the current modality.\n */\nexport function useInteractionModality(): Modality | null {\n  setupGlobalFocusEvents();\n\n  let [modality, setModality] = useState(currentModality);\n  useEffect(() => {\n    let handler = () => {\n      setModality(currentModality);\n    };\n\n    changeHandlers.add(handler);\n    return () => {\n      changeHandlers.delete(handler);\n    };\n  }, []);\n\n  return useIsSSR() ? null : modality;\n}\n\nconst nonTextInputTypes = new Set([\n  'checkbox',\n  'radio',\n  'range',\n  'color',\n  'file',\n  'image',\n  'button',\n  'submit',\n  'reset'\n]);\n\n/**\n * If this is attached to text input component, return if the event is a focus event (Tab/Escape keys pressed) so that\n * focus visible style can be properly set.\n */\nfunction isKeyboardFocusEvent(isTextInput: boolean, modality: Modality, e: HandlerEvent) {\n  const IHTMLInputElement = typeof window !== 'undefined' ? getOwnerWindow(e?.target as Element).HTMLInputElement : HTMLInputElement;\n  const IHTMLTextAreaElement = typeof window !== 'undefined' ? getOwnerWindow(e?.target as Element).HTMLTextAreaElement : HTMLTextAreaElement;\n  const IHTMLElement = typeof window !== 'undefined' ? getOwnerWindow(e?.target as Element).HTMLElement : HTMLElement;\n  const IKeyboardEvent = typeof window !== 'undefined' ? getOwnerWindow(e?.target as Element).KeyboardEvent : KeyboardEvent;\n\n  isTextInput = isTextInput ||\n    (e?.target instanceof IHTMLInputElement && !nonTextInputTypes.has(e?.target?.type)) ||\n    e?.target instanceof IHTMLTextAreaElement ||\n    (e?.target instanceof IHTMLElement && e?.target.isContentEditable);\n  return !(isTextInput && modality === 'keyboard' && e instanceof IKeyboardEvent && !FOCUS_VISIBLE_INPUT_KEYS[e.key]);\n}\n\n/**\n * Manages focus visible state for the page, and subscribes individual components for updates.\n */\nexport function useFocusVisible(props: FocusVisibleProps = {}): FocusVisibleResult {\n  let {isTextInput, autoFocus} = props;\n  let [isFocusVisibleState, setFocusVisible] = useState(autoFocus || isFocusVisible());\n  useFocusVisibleListener((isFocusVisible) => {\n    setFocusVisible(isFocusVisible);\n  }, [isTextInput], {isTextInput});\n\n  return {isFocusVisible: isFocusVisibleState};\n}\n\n/**\n * Listens for trigger change and reports if focus is visible (i.e., modality is not pointer).\n */\nexport function useFocusVisibleListener(fn: FocusVisibleHandler, deps: ReadonlyArray<any>, opts?: {isTextInput?: boolean}): void {\n  setupGlobalFocusEvents();\n\n  useEffect(() => {\n    let handler = (modality: Modality, e: HandlerEvent) => {\n      if (!isKeyboardFocusEvent(!!(opts?.isTextInput), modality, e)) {\n        return;\n      }\n      fn(isFocusVisible());\n    };\n    changeHandlers.add(handler);\n    return () => {\n      changeHandlers.delete(handler);\n    };\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {DOMAttributes} from '@react-types/shared';\nimport {FocusEvent, useCallback, useRef} from 'react';\nimport {useSyntheticBlurEvent} from './utils';\n\nexport interface FocusWithinProps {\n  /** Whether the focus within events should be disabled. */\n  isDisabled?: boolean,\n  /** Handler that is called when the target element or a descendant receives focus. */\n  onFocusWithin?: (e: FocusEvent) => void,\n  /** Handler that is called when the target element and all descendants lose focus. */\n  onBlurWithin?: (e: FocusEvent) => void,\n  /** Handler that is called when the the focus within state changes. */\n  onFocusWithinChange?: (isFocusWithin: boolean) => void\n}\n\nexport interface FocusWithinResult {\n  /** Props to spread onto the target element. */\n  focusWithinProps: DOMAttributes\n}\n\n/**\n * Handles focus events for the target and its descendants.\n */\nexport function useFocusWithin(props: FocusWithinProps): FocusWithinResult {\n  let {\n    isDisabled,\n    onBlurWithin,\n    onFocusWithin,\n    onFocusWithinChange\n  } = props;\n  let state = useRef({\n    isFocusWithin: false\n  });\n\n  let onBlur = useCallback((e: FocusEvent) => {\n    // We don't want to trigger onBlurWithin and then immediately onFocusWithin again\n    // when moving focus inside the element. Only trigger if the currentTarget doesn't\n    // include the relatedTarget (where focus is moving).\n    if (state.current.isFocusWithin && !(e.currentTarget as Element).contains(e.relatedTarget as Element)) {\n      state.current.isFocusWithin = false;\n\n      if (onBlurWithin) {\n        onBlurWithin(e);\n      }\n\n      if (onFocusWithinChange) {\n        onFocusWithinChange(false);\n      }\n    }\n  }, [onBlurWithin, onFocusWithinChange, state]);\n\n  let onSyntheticFocus = useSyntheticBlurEvent(onBlur);\n  let onFocus = useCallback((e: FocusEvent) => {\n    // Double check that document.activeElement actually matches e.target in case a previously chained\n    // focus handler already moved focus somewhere else.\n    if (!state.current.isFocusWithin && document.activeElement === e.target) {\n      if (onFocusWithin) {\n        onFocusWithin(e);\n      }\n\n      if (onFocusWithinChange) {\n        onFocusWithinChange(true);\n      }\n\n      state.current.isFocusWithin = true;\n      onSyntheticFocus(e);\n    }\n  }, [onFocusWithin, onFocusWithinChange, onSyntheticFocus]);\n\n  if (isDisabled) {\n    return {\n      focusWithinProps: {\n        // These should not have been null, that would conflict in mergeProps\n        onFocus: undefined,\n        onBlur: undefined\n      }\n    };\n  }\n\n  return {\n    focusWithinProps: {\n      onFocus,\n      onBlur\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {DOMAttributes, HoverEvents} from '@react-types/shared';\nimport {useEffect, useMemo, useRef, useState} from 'react';\n\nexport interface HoverProps extends HoverEvents {\n  /** Whether the hover events should be disabled. */\n  isDisabled?: boolean\n}\n\nexport interface HoverResult {\n  /** Props to spread on the target element. */\n  hoverProps: DOMAttributes,\n  isHovered: boolean\n}\n\n// iOS fires onPointerEnter twice: once with pointerType=\"touch\" and again with pointerType=\"mouse\".\n// We want to ignore these emulated events so they do not trigger hover behavior.\n// See https://bugs.webkit.org/show_bug.cgi?id=214609.\nlet globalIgnoreEmulatedMouseEvents = false;\nlet hoverCount = 0;\n\nfunction setGlobalIgnoreEmulatedMouseEvents() {\n  globalIgnoreEmulatedMouseEvents = true;\n\n  // Clear globalIgnoreEmulatedMouseEvents after a short timeout. iOS fires onPointerEnter\n  // with pointerType=\"mouse\" immediately after onPointerUp and before onFocus. On other\n  // devices that don't have this quirk, we don't want to ignore a mouse hover sometime in\n  // the distant future because a user previously touched the element.\n  setTimeout(() => {\n    globalIgnoreEmulatedMouseEvents = false;\n  }, 50);\n}\n\nfunction handleGlobalPointerEvent(e) {\n  if (e.pointerType === 'touch') {\n    setGlobalIgnoreEmulatedMouseEvents();\n  }\n}\n\nfunction setupGlobalTouchEvents() {\n  if (typeof document === 'undefined') {\n    return;\n  }\n\n  if (typeof PointerEvent !== 'undefined') {\n    document.addEventListener('pointerup', handleGlobalPointerEvent);\n  } else {\n    document.addEventListener('touchend', setGlobalIgnoreEmulatedMouseEvents);\n  }\n\n  hoverCount++;\n  return () => {\n    hoverCount--;\n    if (hoverCount > 0) {\n      return;\n    }\n\n    if (typeof PointerEvent !== 'undefined') {\n      document.removeEventListener('pointerup', handleGlobalPointerEvent);\n    } else {\n      document.removeEventListener('touchend', setGlobalIgnoreEmulatedMouseEvents);\n    }\n  };\n}\n\n/**\n * Handles pointer hover interactions for an element. Normalizes behavior\n * across browsers and platforms, and ignores emulated mouse events on touch devices.\n */\nexport function useHover(props: HoverProps): HoverResult {\n  let {\n    onHoverStart,\n    onHoverChange,\n    onHoverEnd,\n    isDisabled\n  } = props;\n\n  let [isHovered, setHovered] = useState(false);\n  let state = useRef({\n    isHovered: false,\n    ignoreEmulatedMouseEvents: false,\n    pointerType: '',\n    target: null\n  }).current;\n\n  useEffect(setupGlobalTouchEvents, []);\n\n  let {hoverProps, triggerHoverEnd} = useMemo(() => {\n    let triggerHoverStart = (event, pointerType) => {\n      state.pointerType = pointerType;\n      if (isDisabled || pointerType === 'touch' || state.isHovered || !event.currentTarget.contains(event.target)) {\n        return;\n      }\n\n      state.isHovered = true;\n      let target = event.currentTarget;\n      state.target = target;\n\n      if (onHoverStart) {\n        onHoverStart({\n          type: 'hoverstart',\n          target,\n          pointerType\n        });\n      }\n\n      if (onHoverChange) {\n        onHoverChange(true);\n      }\n\n      setHovered(true);\n    };\n\n    let triggerHoverEnd = (event, pointerType) => {\n      state.pointerType = '';\n      state.target = null;\n\n      if (pointerType === 'touch' || !state.isHovered) {\n        return;\n      }\n\n      state.isHovered = false;\n      let target = event.currentTarget;\n      if (onHoverEnd) {\n        onHoverEnd({\n          type: 'hoverend',\n          target,\n          pointerType\n        });\n      }\n\n      if (onHoverChange) {\n        onHoverChange(false);\n      }\n\n      setHovered(false);\n    };\n\n    let hoverProps: DOMAttributes = {};\n\n    if (typeof PointerEvent !== 'undefined') {\n      hoverProps.onPointerEnter = (e) => {\n        if (globalIgnoreEmulatedMouseEvents && e.pointerType === 'mouse') {\n          return;\n        }\n\n        triggerHoverStart(e, e.pointerType);\n      };\n\n      hoverProps.onPointerLeave = (e) => {\n        if (!isDisabled && e.currentTarget.contains(e.target as Element)) {\n          triggerHoverEnd(e, e.pointerType);\n        }\n      };\n    } else {\n      hoverProps.onTouchStart = () => {\n        state.ignoreEmulatedMouseEvents = true;\n      };\n\n      hoverProps.onMouseEnter = (e) => {\n        if (!state.ignoreEmulatedMouseEvents && !globalIgnoreEmulatedMouseEvents) {\n          triggerHoverStart(e, 'mouse');\n        }\n\n        state.ignoreEmulatedMouseEvents = false;\n      };\n\n      hoverProps.onMouseLeave = (e) => {\n        if (!isDisabled && e.currentTarget.contains(e.target as Element)) {\n          triggerHoverEnd(e, 'mouse');\n        }\n      };\n    }\n    return {hoverProps, triggerHoverEnd};\n  }, [onHoverStart, onHoverChange, onHoverEnd, isDisabled, state]);\n\n  useEffect(() => {\n    // Call the triggerHoverEnd as soon as isDisabled changes to true\n    // Safe to call triggerHoverEnd, it will early return if we aren't currently hovering\n    if (isDisabled) {\n      triggerHoverEnd({currentTarget: state.target}, state.pointerType);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isDisabled]);\n\n  return {\n    hoverProps,\n    isHovered\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusEvent as ReactFocusEvent, useCallback, useRef} from 'react';\nimport {useEffectEvent, useLayoutEffect} from '@react-aria/utils';\n\nexport class SyntheticFocusEvent<Target = Element> implements ReactFocusEvent<Target> {\n  nativeEvent: FocusEvent;\n  target: EventTarget & Target;\n  currentTarget: EventTarget & Target;\n  relatedTarget: Element;\n  bubbles: boolean;\n  cancelable: boolean;\n  defaultPrevented: boolean;\n  eventPhase: number;\n  isTrusted: boolean;\n  timeStamp: number;\n  type: string;\n\n  constructor(type: string, nativeEvent: FocusEvent) {\n    this.nativeEvent = nativeEvent;\n    this.target = nativeEvent.target as EventTarget & Target;\n    this.currentTarget = nativeEvent.currentTarget as EventTarget & Target;\n    this.relatedTarget = nativeEvent.relatedTarget as Element;\n    this.bubbles = nativeEvent.bubbles;\n    this.cancelable = nativeEvent.cancelable;\n    this.defaultPrevented = nativeEvent.defaultPrevented;\n    this.eventPhase = nativeEvent.eventPhase;\n    this.isTrusted = nativeEvent.isTrusted;\n    this.timeStamp = nativeEvent.timeStamp;\n    this.type = type;\n  }\n\n  isDefaultPrevented(): boolean {\n    return this.nativeEvent.defaultPrevented;\n  }\n\n  preventDefault(): void {\n    this.defaultPrevented = true;\n    this.nativeEvent.preventDefault();\n  }\n\n  stopPropagation(): void {\n    this.nativeEvent.stopPropagation();\n    this.isPropagationStopped = () => true;\n  }\n\n  isPropagationStopped(): boolean {\n    return false;\n  }\n\n  persist() {}\n}\n\nexport function useSyntheticBlurEvent<Target = Element>(onBlur: (e: ReactFocusEvent<Target>) => void) {\n  let stateRef = useRef({\n    isFocused: false,\n    observer: null as MutationObserver | null\n  });\n\n  // Clean up MutationObserver on unmount. See below.\n   \n  useLayoutEffect(() => {\n    const state = stateRef.current;\n    return () => {\n      if (state.observer) {\n        state.observer.disconnect();\n        state.observer = null;\n      }\n    };\n  }, []);\n\n  let dispatchBlur = useEffectEvent((e: SyntheticFocusEvent<Target>) => {\n    onBlur?.(e);\n  });\n\n  // This function is called during a React onFocus event.\n  return useCallback((e: ReactFocusEvent<Target>) => {\n    // React does not fire onBlur when an element is disabled. https://github.com/facebook/react/issues/9142\n    // Most browsers fire a native focusout event in this case, except for Firefox. In that case, we use a\n    // MutationObserver to watch for the disabled attribute, and dispatch these events ourselves.\n    // For browsers that do, focusout fires before the MutationObserver, so onBlur should not fire twice.\n    if (\n      e.target instanceof HTMLButtonElement ||\n      e.target instanceof HTMLInputElement ||\n      e.target instanceof HTMLTextAreaElement ||\n      e.target instanceof HTMLSelectElement\n    ) {\n      stateRef.current.isFocused = true;\n\n      let target = e.target;\n      let onBlurHandler: EventListenerOrEventListenerObject | null = (e) => {\n        stateRef.current.isFocused = false;\n\n        if (target.disabled) {\n          // For backward compatibility, dispatch a (fake) React synthetic event.\n          dispatchBlur(new SyntheticFocusEvent('blur', e as FocusEvent));\n        }\n\n        // We no longer need the MutationObserver once the target is blurred.\n        if (stateRef.current.observer) {\n          stateRef.current.observer.disconnect();\n          stateRef.current.observer = null;\n        }\n      };\n\n      target.addEventListener('focusout', onBlurHandler, {once: true});\n\n      stateRef.current.observer = new MutationObserver(() => {\n        if (stateRef.current.isFocused && target.disabled) {\n          stateRef.current.observer?.disconnect();\n          let relatedTargetEl = target === document.activeElement ? null : document.activeElement;\n          target.dispatchEvent(new FocusEvent('blur', {relatedTarget: relatedTargetEl}));\n          target.dispatchEvent(new FocusEvent('focusout', {bubbles: true, relatedTarget: relatedTargetEl}));\n        }\n      });\n\n      stateRef.current.observer.observe(target, {attributes: true, attributeFilter: ['disabled']});\n    }\n  }, [dispatchBlur]);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// We must avoid a circular dependency with @react-aria/utils, and this useLayoutEffect is\n// guarded by a check that it only runs on the client side.\n// eslint-disable-next-line rulesdir/useLayoutEffectRule\nimport React, {JSX, ReactNode, useContext, useLayoutEffect, useMemo, useRef, useState} from 'react';\n\n// To support SSR, the auto incrementing id counter is stored in a context. This allows\n// it to be reset on every request to ensure the client and server are consistent.\n// There is also a prefix string that is used to support async loading components\n// Each async boundary must be wrapped in an SSR provider, which appends to the prefix\n// and resets the current id counter. This ensures that async loaded components have\n// consistent ids regardless of the loading order.\ninterface SSRContextValue {\n  prefix: string,\n  current: number\n}\n\n// Default context value to use in case there is no SSRProvider. This is fine for\n// client-only apps. In order to support multiple copies of React Aria potentially\n// being on the page at once, the prefix is set to a random number. SSRProvider\n// will reset this to zero for consistency between server and client, so in the\n// SSR case multiple copies of React Aria is not supported.\nconst defaultContext: SSRContextValue = {\n  prefix: String(Math.round(Math.random() * 10000000000)),\n  current: 0\n};\n\nconst SSRContext = React.createContext<SSRContextValue>(defaultContext);\nconst IsSSRContext = React.createContext(false);\n\nexport interface SSRProviderProps {\n  /** Your application here. */\n  children: ReactNode\n}\n\n// This is only used in React < 18.\nfunction LegacySSRProvider(props: SSRProviderProps): JSX.Element {\n  let cur = useContext(SSRContext);\n  let counter = useCounter(cur === defaultContext);\n  let [isSSR, setIsSSR] = useState(true);\n  let value: SSRContextValue = useMemo(() => ({\n    // If this is the first SSRProvider, start with an empty string prefix, otherwise\n    // append and increment the counter.\n    prefix: cur === defaultContext ? '' : `${cur.prefix}-${counter}`,\n    current: 0\n  }), [cur, counter]);\n\n  // If on the client, and the component was initially server rendered,\n  // then schedule a layout effect to update the component after hydration.\n  if (typeof document !== 'undefined') {\n    // This if statement technically breaks the rules of hooks, but is safe\n    // because the condition never changes after mounting.\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useLayoutEffect(() => {\n      setIsSSR(false);\n    }, []);\n  }\n\n  return (\n    <SSRContext.Provider value={value}>\n      <IsSSRContext.Provider value={isSSR}>\n        {props.children}\n      </IsSSRContext.Provider>\n    </SSRContext.Provider>\n  );\n}\n\nlet warnedAboutSSRProvider = false;\n\n/**\n * When using SSR with React Aria in React 16 or 17, applications must be wrapped in an SSRProvider.\n * This ensures that auto generated ids are consistent between the client and server.\n */\nexport function SSRProvider(props: SSRProviderProps): JSX.Element {\n  if (typeof React['useId'] === 'function') {\n    if (process.env.NODE_ENV !== 'test' && !warnedAboutSSRProvider) {\n      console.warn('In React 18, SSRProvider is not necessary and is a noop. You can remove it from your app.');\n      warnedAboutSSRProvider = true;\n    }\n    return <>{props.children}</>;\n  }\n  return <LegacySSRProvider {...props} />;\n}\n\nlet canUseDOM = Boolean(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n);\n\nlet componentIds = new WeakMap();\n\nfunction useCounter(isDisabled = false) {\n  let ctx = useContext(SSRContext);\n  let ref = useRef<number | null>(null);\n  // eslint-disable-next-line rulesdir/pure-render\n  if (ref.current === null && !isDisabled) {\n    // In strict mode, React renders components twice, and the ref will be reset to null on the second render.\n    // This means our id counter will be incremented twice instead of once. This is a problem because on the\n    // server, components are only rendered once and so ids generated on the server won't match the client.\n    // In React 18, useId was introduced to solve this, but it is not available in older versions. So to solve this\n    // we need to use some React internals to access the underlying Fiber instance, which is stable between renders.\n    // This is exposed as ReactCurrentOwner in development, which is all we need since StrictMode only runs in development.\n    // To ensure that we only increment the global counter once, we store the starting id for this component in\n    // a weak map associated with the Fiber. On the second render, we reset the global counter to this value.\n    // Since React runs the second render immediately after the first, this is safe.\n    // @ts-ignore\n    let currentOwner = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED?.ReactCurrentOwner?.current;\n    if (currentOwner) {\n      let prevComponentValue = componentIds.get(currentOwner);\n      if (prevComponentValue == null) {\n        // On the first render, and first call to useId, store the id and state in our weak map.\n        componentIds.set(currentOwner, {\n          id: ctx.current,\n          state: currentOwner.memoizedState\n        });\n      } else if (currentOwner.memoizedState !== prevComponentValue.state) {\n        // On the second render, the memoizedState gets reset by React.\n        // Reset the counter, and remove from the weak map so we don't\n        // do this for subsequent useId calls.\n        ctx.current = prevComponentValue.id;\n        componentIds.delete(currentOwner);\n      }\n    }\n\n    // eslint-disable-next-line rulesdir/pure-render\n    ref.current = ++ctx.current;\n  }\n\n  // eslint-disable-next-line rulesdir/pure-render\n  return ref.current;\n}\n\nfunction useLegacySSRSafeId(defaultId?: string): string {\n  let ctx = useContext(SSRContext);\n\n  // If we are rendering in a non-DOM environment, and there's no SSRProvider,\n  // provide a warning to hint to the developer to add one.\n  if (ctx === defaultContext && !canUseDOM) {\n    console.warn('When server rendering, you must wrap your application in an <SSRProvider> to ensure consistent ids are generated between the client and server.');\n  }\n\n  let counter = useCounter(!!defaultId);\n  let prefix = ctx === defaultContext && process.env.NODE_ENV === 'test' ? 'react-aria' : `react-aria${ctx.prefix}`;\n  return defaultId || `${prefix}-${counter}`;\n}\n\nfunction useModernSSRSafeId(defaultId?: string): string {\n  let id = React.useId();\n  let [didSSR] = useState(useIsSSR());\n  let prefix = didSSR || process.env.NODE_ENV === 'test' ? 'react-aria' : `react-aria${defaultContext.prefix}`;\n  return defaultId || `${prefix}-${id}`;\n}\n\n// Use React.useId in React 18 if available, otherwise fall back to our old implementation.\n/** @private */\nexport const useSSRSafeId = typeof React['useId'] === 'function' ? useModernSSRSafeId : useLegacySSRSafeId;\n\nfunction getSnapshot() {\n  return false;\n}\n\nfunction getServerSnapshot() {\n  return true;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction subscribe(onStoreChange: () => void): () => void {\n  // noop\n  return () => {};\n}\n\n/**\n * Returns whether the component is currently being server side rendered or\n * hydrated on the client. Can be used to delay browser-specific rendering\n * until after hydration.\n */\nexport function useIsSSR(): boolean {\n  // In React 18, we can use useSyncExternalStore to detect if we're server rendering or hydrating.\n  if (typeof React['useSyncExternalStore'] === 'function') {\n    return React['useSyncExternalStore'](subscribe, getSnapshot, getServerSnapshot);\n  }\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return useContext(IsSSRContext);\n}\n","export const getOwnerDocument = (el: Element | null | undefined): Document => {\n  return el?.ownerDocument ?? document;\n};\n\nexport const getOwnerWindow = (\n  el: (Window & typeof global) | Element | null | undefined\n): Window & typeof global => {\n  if (el && 'window' in el && el.window === el) {\n    return el;\n  }\n\n  const doc = getOwnerDocument(el as Element | null | undefined);\n  return doc.defaultView || window;\n};\n","/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {isAndroid} from './platform';\n\n// Original licensing for the following method can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/blob/3c713d513195a53788b3f8bb4b70279d68b15bcc/packages/react-interactions/events/src/dom/shared/index.js#L74-L87\n\n// Keyboards, Assistive Technologies, and element.click() all produce a \"virtual\"\n// click event. This is a method of inferring such clicks. Every browser except\n// IE 11 only sets a zero value of \"detail\" for click events that are \"virtual\".\n// However, IE 11 uses a zero value for all click events. For IE 11 we rely on\n// the quirk that it produces click events that are of type PointerEvent, and\n// where only the \"virtual\" click lacks a pointerType field.\n\nexport function isVirtualClick(event: MouseEvent | PointerEvent): boolean {\n  // JAWS/NVDA with Firefox.\n  if ((event as any).mozInputSource === 0 && event.isTrusted) {\n    return true;\n  }\n\n  // Android TalkBack's detail value varies depending on the event listener providing the event so we have specific logic here instead\n  // If pointerType is defined, event is from a click listener. For events from mousedown listener, detail === 0 is a sufficient check\n  // to detect TalkBack virtual clicks.\n  if (isAndroid() && (event as PointerEvent).pointerType) {\n    return event.type === 'click' && event.buttons === 1;\n  }\n\n  return event.detail === 0 && !(event as PointerEvent).pointerType;\n}\n\nexport function isVirtualPointerEvent(event: PointerEvent) {\n  // If the pointer size is zero, then we assume it's from a screen reader.\n  // Android TalkBack double tap will sometimes return a event with width and height of 1\n  // and pointerType === 'mouse' so we need to check for a specific combination of event attributes.\n  // Cannot use \"event.pressure === 0\" as the sole check due to Safari pointer events always returning pressure === 0\n  // instead of .5, see https://bugs.webkit.org/show_bug.cgi?id=206216. event.pointerType === 'mouse' is to distingush\n  // Talkback double tap from Windows Firefox touch screen press\n  return (\n    (!isAndroid() && event.width === 0 && event.height === 0) ||\n    (event.width === 1 &&\n      event.height === 1 &&\n      event.pressure === 0 &&\n      event.detail === 0 &&\n      event.pointerType === 'mouse'\n    )\n  );\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction testUserAgent(re: RegExp) {\n  if (typeof window === 'undefined' || window.navigator == null) {\n    return false;\n  }\n  return (\n    window.navigator['userAgentData']?.brands.some((brand: {brand: string, version: string}) => re.test(brand.brand))\n  ) ||\n  re.test(window.navigator.userAgent);\n}\n\nfunction testPlatform(re: RegExp) {\n  return typeof window !== 'undefined' && window.navigator != null\n    ? re.test(window.navigator['userAgentData']?.platform || window.navigator.platform)\n    : false;\n}\n\nfunction cached(fn: () => boolean) {\n  if (process.env.NODE_ENV === 'test') {\n    return fn;\n  }\n  \n  let res: boolean | null = null;\n  return () => {\n    if (res == null) {\n      res = fn();\n    }\n    return res;\n  };\n}\n\nexport const isMac = cached(function () {\n  return testPlatform(/^Mac/i);\n});\n\nexport const isIPhone = cached(function () {\n  return testPlatform(/^iPhone/i);\n});\n\nexport const isIPad = cached(function () {\n  return testPlatform(/^iPad/i) ||\n    // iPadOS 13 lies and says it's a Mac, but we can distinguish by detecting touch support.\n    (isMac() && navigator.maxTouchPoints > 1);\n});\n\nexport const isIOS = cached(function () {\n  return isIPhone() || isIPad();\n});\n\nexport const isAppleDevice = cached(function () {\n  return isMac() || isIOS();\n});\n\nexport const isWebKit = cached(function () {\n  return testUserAgent(/AppleWebKit/i) && !isChrome();\n});\n\nexport const isChrome = cached(function () {\n  return testUserAgent(/Chrome/i);\n});\n\nexport const isAndroid = cached(function () {\n  return testUserAgent(/Android/i);\n});\n\nexport const isFirefox = cached(function () {\n  return testUserAgent(/Firefox/i);\n});\n","/*\n * Copyright 2023 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {useCallback, useRef} from 'react';\nimport {useLayoutEffect} from './useLayoutEffect';\n\nexport function useEffectEvent<T extends Function>(fn?: T): T {\n  const ref = useRef<T | null | undefined>(null);\n  useLayoutEffect(() => {\n    ref.current = fn;\n  }, [fn]);\n  // @ts-ignore\n  return useCallback<T>((...args) => {\n    const f = ref.current!;\n    return f?.(...args);\n  }, []);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport React from 'react';\n\n// During SSR, React emits a warning when calling useLayoutEffect.\n// Since neither useLayoutEffect nor useEffect run on the server,\n// we can suppress this by replace it with a noop on the server.\nexport const useLayoutEffect = typeof document !== 'undefined'\n  ? React.useLayoutEffect\n  : () => {};\n"],"names":["$f7dceffc5ad7768b$export$4e328f61c538687f","props","arguments","length","undefined","autoFocus","isTextInput","within","state","$isWE5$useRef","isFocused","isFocusVisible","$isWE5$isFocusVisible","setFocused","$isWE5$useState","isFocusVisibleState","setFocusVisible","current","updateState","$isWE5$useCallback","onFocusChange","$isWE5$useFocusVisibleListener","focusProps","$isWE5$useFocus","isDisabled","focusWithinProps","$isWE5$useFocusWithin","onFocusWithinChange","$a1ea59d68270f0dd$export$f8168d8dd8fd66e6","onFocus","onFocusProp","onBlur","onBlurProp","$hf0lj$useCallback","e","target","currentTarget","onSyntheticFocus","$8a9cb279dc87e130$export$715c682d09d639cc","ownerDocument","$hf0lj$getOwnerDocument","activeElement","$507fabe10e71c6fb$var$currentModality","$507fabe10e71c6fb$var$changeHandlers","Set","$507fabe10e71c6fb$export$d90243b58daecda7","Map","$507fabe10e71c6fb$var$hasEventBeforeFocus","$507fabe10e71c6fb$var$hasBlurredWindowRecently","$507fabe10e71c6fb$var$FOCUS_VISIBLE_INPUT_KEYS","Tab","Escape","$507fabe10e71c6fb$var$triggerChangeHandlers","modality","handler","$507fabe10e71c6fb$var$handleKeyboardEvent","metaKey","$28AnR$isMac","altKey","ctrlKey","key","$507fabe10e71c6fb$var$isValidKey","$507fabe10e71c6fb$var$handlePointerEvent","type","$507fabe10e71c6fb$var$handleClickEvent","$28AnR$isVirtualClick","$507fabe10e71c6fb$var$handleFocusEvent","window","document","$507fabe10e71c6fb$var$handleWindowBlur","$507fabe10e71c6fb$var$setupGlobalFocusEvents","element","get","$28AnR$getOwnerWindow","windowObject","documentObject","$28AnR$getOwnerDocument","focus","HTMLElement","prototype","apply","this","addEventListener","PointerEvent","$507fabe10e71c6fb$var$tearDownWindowFocusTracking","once","set","loadListener","removeEventListener","has","delete","$507fabe10e71c6fb$export$b9b3dfddab17db27","$507fabe10e71c6fb$export$630ff653c5ada6a9","$507fabe10e71c6fb$export$8397ddfc504fdb9a","$507fabe10e71c6fb$export$98e20ec92f614cfe","setModality","$28AnR$useState","$28AnR$useEffect","add","$28AnR$useIsSSR","readyState","$507fabe10e71c6fb$export$2f1888112f558a7d","$507fabe10e71c6fb$var$nonTextInputTypes","$507fabe10e71c6fb$export$ec71b4b83ac08ec3","fn","deps","opts","_e_target","IHTMLInputElement","HTMLInputElement","IHTMLTextAreaElement","HTMLTextAreaElement","IHTMLElement","IKeyboardEvent","KeyboardEvent","isContentEditable","$507fabe10e71c6fb$var$isKeyboardFocusEvent","$9ab94262bd0047c7$export$420e68273165f4ec","onBlurWithin","onFocusWithin","$3b9Q0$useRef","isFocusWithin","$3b9Q0$useCallback","contains","relatedTarget","$6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents","$6179b936705e76d3$var$hoverCount","$6179b936705e76d3$var$setGlobalIgnoreEmulatedMouseEvents","setTimeout","$6179b936705e76d3$var$handleGlobalPointerEvent","pointerType","$6179b936705e76d3$var$setupGlobalTouchEvents","$6179b936705e76d3$export$ae780daf29e6d456","onHoverStart","onHoverChange","onHoverEnd","isHovered","setHovered","$AWxnT$useState","$AWxnT$useRef","ignoreEmulatedMouseEvents","$AWxnT$useEffect","hoverProps","triggerHoverEnd","$AWxnT$useMemo","triggerHoverStart","event","onPointerEnter","onPointerLeave","onTouchStart","onMouseEnter","onMouseLeave","$8a9cb279dc87e130$export$905e7fc544a71f36","isDefaultPrevented","nativeEvent","defaultPrevented","preventDefault","stopPropagation","isPropagationStopped","persist","constructor","bubbles","cancelable","eventPhase","isTrusted","timeStamp","stateRef","$6dfIe$useRef","observer","$6dfIe$useLayoutEffect","disconnect","dispatchBlur","$6dfIe$useEffectEvent","$6dfIe$useCallback","HTMLButtonElement","HTMLSelectElement","onBlurHandler","disabled","MutationObserver","_stateRef_current_observer","relatedTargetEl","dispatchEvent","FocusEvent","observe","attributes","attributeFilter","$b5e257d569688ac6$var$defaultContext","prefix","String","Math","round","random","$b5e257d569688ac6$var$SSRContext","$670gB$react","createContext","$b5e257d569688ac6$var$IsSSRContext","$b5e257d569688ac6$var$canUseDOM","Boolean","createElement","$b5e257d569688ac6$var$componentIds","WeakMap","$b5e257d569688ac6$var$useCounter","ctx","$670gB$useContext","ref","$670gB$useRef","_React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner","_React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","currentOwner","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","prevComponentValue","id","memoizedState","$b5e257d569688ac6$export$619500959fc48b26","defaultId","useId","didSSR","$670gB$useState","$b5e257d569688ac6$export$535bd6ca7f90a273","concat","console","warn","counter","$b5e257d569688ac6$var$getSnapshot","$b5e257d569688ac6$var$getServerSnapshot","$b5e257d569688ac6$var$subscribe","onStoreChange","$431fbd86ca7dc216$export$b204af158042fbac","el","_el_ownerDocument","$431fbd86ca7dc216$export$f21a1ffae260145a","defaultView","$6a7db85432448f7f$export$60278871457622de","mozInputSource","$c87311424ea30a05$export$a11b0059900ceec8","buttons","detail","$6a7db85432448f7f$export$29bf1b5f2c56cf63","width","height","pressure","$c87311424ea30a05$var$testUserAgent","re","_window_navigator_userAgentData","navigator","brands","some","brand","test","userAgent","$c87311424ea30a05$var$testPlatform","platform","$c87311424ea30a05$var$cached","res","$c87311424ea30a05$export$9ac100e40613ea10","$c87311424ea30a05$export$186c6964ca17d99","$c87311424ea30a05$export$7bef049ce92e4224","maxTouchPoints","$c87311424ea30a05$export$fedb369cb70207f1","$c87311424ea30a05$export$e1865c3bedcd822b","$c87311424ea30a05$export$78551043582a6a98","$c87311424ea30a05$export$6446a186d09e379e","$c87311424ea30a05$export$b7d78993b74f766d","$8ae05eaa5c114e9c$export$7f54fc3180508a52","$lmaYr$useRef","$f0a04ccd8dbdd83b$export$e5c5a5f917a5871c","$lmaYr$useCallback","f","$HgANd$react","useLayoutEffect"],"sourceRoot":""}